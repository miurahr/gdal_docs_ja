# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1998-2020
# This file is distributed under the same license as the GDAL package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr "Project-Id-Version: GDAL \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-10-19 07:39+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../source/user/configoptions.rst:5
msgid "Configuration options"
msgstr ""

#: ../../source/user/configoptions.rst:7
msgid ""
"This page discusses runtime configuration options for GDAL. These are "
"distinct from options to the build-time configure script. Runtime "
"configuration options apply on all platforms, and are evaluated at "
"runtime. They can be set programmatically, by commandline switches or in "
"the environment by the user."
msgstr ""

#: ../../source/user/configoptions.rst:12
msgid ""
"Configuration options are normally used to alter the default behavior of "
"GDAL/OGR drivers and in some cases the GDAL/OGR core. They are "
"essentially global variables the user can set."
msgstr ""

#: ../../source/user/configoptions.rst:17
msgid "How to set configuration options?"
msgstr ""

#: ../../source/user/configoptions.rst:19
msgid ""
"One example of a configuration option is the "
":decl_configoption:`GDAL_CACHEMAX` option. It controls the size of the "
"GDAL block cache, in megabytes. It can be set in the environment on Unix "
"(bash/bourne) shell like this:"
msgstr ""

#: ../../source/user/configoptions.rst:28
msgid "Or just for this command, like this: ::"
msgstr ""

#: ../../source/user/configoptions.rst:34
msgid "In a DOS/Windows command shell it is done like this:"
msgstr ""

#: ../../source/user/configoptions.rst:40
msgid ""
"It can also be set on the commandline for most GDAL and OGR utilities "
"with the ``--config`` switch, though in a few cases these switches are "
"not evaluated in time to affect behavior."
msgstr ""

#: ../../source/user/configoptions.rst:48
msgid ""
"In C/C++ configuration switches can be set programmatically with "
":cpp:func:`CPLSetConfigOption`:"
msgstr ""

#: ../../source/user/configoptions.rst:57
msgid ""
"Normally a configuration option applies to all threads active in a "
"program, but they can be limited to only the current thread with "
":cpp:func:`CPLSetThreadLocalConfigOption`"
msgstr ""

#: ../../source/user/configoptions.rst:65
msgid ""
"For boolean options, the values YES, TRUE or ON can be used to turn the "
"option on; NO, FALSE or OFF to turn it off."
msgstr ""

#: ../../source/user/configoptions.rst:71
msgid "List of configuration options and where they apply"
msgstr ""

#: ../../source/user/configoptions.rst:74
msgid ""
"This list is known to be incomplete. It depends on proper annotation of "
"configuration options where they are mentioned elsewhere in the "
"documentation. If you want to help to extend it, use the "
"``:decl_configoption:`NAME``` syntax in places where a configuration "
"option is mentioned."
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:6
msgid "ATTRIBUTES_SKIP: :ref:`vector.geojson`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:7
msgid "AWS_ACCESS_KEY_ID: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:8
msgid "AWS_CONFIG_FILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:9
msgid "AWS_DEFAULT_PROFILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:10
msgid "AWS_DEFAULT_REGION: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:11
msgid "AWS_HTTPS: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:12
msgid "AWS_NO_SIGN_REQUEST=YES: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:13
msgid "AWS_PROFILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:14
msgid "AWS_REGION: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:15
msgid "AWS_REQUEST_PAYER: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:16
msgid "AWS_S3_ENDPOINT: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:17
msgid "AWS_SECRET_ACCESS_KEY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:18
msgid "AWS_SESSION_TOKEN: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:19
msgid "AWS_VIRTUAL_HOSTING: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:20
msgid "AZURE_NO_SIGN_REQUEST=YES: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:21
msgid "AZURE_SAS: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:22
msgid "AZURE_STORAGE_ACCESS_KEY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:23
msgid "AZURE_STORAGE_ACCOUNT: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:24
msgid "AZURE_STORAGE_CONNECTION_STRING: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:25
msgid "BIGTIFF_OVERVIEW: :ref:`gdaladdo`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:26
msgid "COMPRESS_OVERVIEW: :ref:`gdaladdo`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:27
msgid "CPL_AWS_CREDENTIALS_FILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:28
msgid "CPL_CURL_VERBOSE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:29
msgid "CPL_GS_CREDENTIALS_FILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:30
msgid "CPL_MACHINE_IS_GCE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:31
msgid "CPL_TMPDIR:"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:33
msgid ":ref:`vector.osm`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:34
#: ../../source/user/configoptions_index_generated.rst:69
msgid ":ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:35
msgid "CPL_VSIL_CURL_CACHE_SIZE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:36
msgid "CPL_VSIL_CURL_CHUNK_SIZE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:37
msgid "CPL_VSIL_CURL_IGNORE_GLACIER_STORAGE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:38
msgid "CPL_VSIL_CURL_NON_CACHED: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:39
msgid "CPL_VSIL_CURL_USE_HEAD: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:40
msgid "CPL_VSIL_CURL_USE_S3_REDIRECT: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:41
msgid "CPL_VSIL_DEFLATE_CHUNK_SIZE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:42
msgid "CPL_VSIL_GZIP_WRITE_PROPERTIES: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:43
msgid "CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:44
msgid "CPL_VSIS3_USE_BASE_RMDIR_RECURSIVE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:45
msgid "CURL_CA_BUNDLE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:46
msgid "DXF_3D_EXTENSIBLE_MODE: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:47
msgid "DXF_ENCODING: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:48
msgid "DXF_FEATURE_LIMIT_PER_BLOCK: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:49
msgid "DXF_HATCH_TOLERANCE: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:50
msgid "DXF_INCLUDE_RAW_CODE_VALUES: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:51
msgid "DXF_INLINE_BLOCKS: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:52
msgid "DXF_MERGE_BLOCK_GEOMETRIES: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:53
msgid "DXF_TRANSLATE_ESCAPE_SEQUENCES: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:54
msgid "DXF_WRITE_HATCH: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:55
msgid "ESRI_XML_PAM: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:56
msgid "GDAL_DATA: :ref:`raster_common_options`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:57
msgid "GDAL_ENABLE_TIFF_SPLIT: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:58
msgid "GDAL_GEOREF_SOURCES: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:59
msgid "GDAL_HTTP_HEADER_FILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:60
msgid "GDAL_HTTP_MAX_RETRY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:61
msgid "GDAL_HTTP_PROXY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:62
msgid "GDAL_HTTP_PROXYUSERPWD: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:63
msgid "GDAL_HTTP_RETRY_DELAY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:64
msgid "GDAL_INGESTED_BYTES_AT_OPEN: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:65
msgid "GDAL_MAX_CONNECTIONS: :ref:`raster.wms`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:66
msgid "GDAL_NUM_THREADS:"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:68
#: ../../source/user/configoptions_index_generated.rst:134
msgid ":ref:`gdaladdo`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:70
#: ../../source/user/configoptions_index_generated.rst:135
msgid ":ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:71
msgid ":ref:`vector.mvt`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:72
msgid "GDAL_PROXY_AUTH: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:73
msgid "GDAL_TIFF_INTERNAL_MASK: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:74
msgid "GDAL_TIFF_INTERNAL_MASK_TO_8BIT: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:75
msgid "GDAL_TIFF_OVR_BLOCKSIZE: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:76
msgid "GDAL_TRY_PDS3_WITH_VICAR:"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:78
msgid ":ref:`raster.pds`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:79
msgid ":ref:`raster.vicar`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:80
msgid "GEOMETRY_AS_COLLECTION: :ref:`vector.geojson`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:81
msgid "GOOGLE_APPLICATION_CREDENTIALS: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:82
msgid "GS_ACCESS_KEY_ID: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:83
msgid "GS_OAUTH2_CLIENT_EMAIL: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:84
msgid "GS_OAUTH2_CLIENT_ID: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:85
msgid "GS_OAUTH2_CLIENT_SECRET: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:86
msgid "GS_OAUTH2_PRIVATE_KEY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:87
msgid "GS_OAUTH2_PRIVATE_KEY_FILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:88
msgid "GS_OAUTH2_PRIVATE_KEY_FILE): :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:89
msgid "GS_OAUTH2_REFRESH_TOKEN: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:90
msgid "GS_OAUTH2_SCOPE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:91
msgid "GS_SECRET_ACCESS_KEY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:92
msgid "GTIFF_DIRECT_IO: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:93
msgid "GTIFF_IGNORE_READ_ERRORS: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:94
msgid "GTIFF_LINEAR_UNITS: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:95
msgid "GTIFF_POINT_GEO_IGNORE: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:96
msgid "GTIFF_REPORT_COMPD_CS: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:97
msgid "GTIFF_VIRTUAL_MEM_IO: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:98
msgid "GTIFF_WRITE_TOWGS84: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:99
msgid "INTERLEAVE_OVERVIEW: :ref:`gdaladdo`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:100
msgid "JPEG_QUALITY_OVERVIEW: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:101
msgid "MITAB_SET_TOWGS84_ON_KNOWN_DATUM: :ref:`vector.mitab`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:102
msgid "OGR_ARC_MAX_GAP: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:103
msgid "OGR_ARC_STEPSIZE: :ref:`vector.dxf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:104
msgid "OGR_EDIGEO_FONT_SIZE_FACTOR: :ref:`vector.edigeo`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:105
msgid "OGR_GEOJSON_ARRAY_AS_STRING: :ref:`vector.geojson`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:106
msgid "OGR_GEOJSON_DATE_AS_STRING: :ref:`vector.geojson`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:107
msgid "OGR_GEOJSON_MAX_OBJ_SIZE: :ref:`vector.geojson`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:108
msgid "OGR_ORGANIZE_POLYGONS: :ref:`vector.shapefile`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:109
msgid "OGR_PDF_READ_NON_STRUCTURED: :ref:`vector.pdf`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:110
msgid "OGR_PG_RETRIEVE_FID: :ref:`vector.pg_advanced`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:111
msgid "OGR_SQL_LIKE_AS_ILIKE: :ref:`ogr_sql_dialect`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:112
msgid "OSM_COMPRESS_NODES: :ref:`vector.osm`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:113
msgid "OSM_CONFIG_FILE: :ref:`vector.osm`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:114
msgid "OSM_MAX_TMPFILE_SIZE: :ref:`vector.osm`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:115
msgid "OSM_USE_CUSTOM_INDEXING: :ref:`vector.osm`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:116
msgid "OSS_ACCESS_KEY_ID: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:117
msgid "OSS_ENDPOINT: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:118
msgid "OSS_SECRET_ACCESS_KEY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:119
msgid "PHOTOMETRIC_OVERVIEW: :ref:`gdaladdo`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:120
msgid "SHAPE_2GB_LIMIT: :ref:`vector.shapefile`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:121
msgid "SHAPE_ENCODING: :ref:`vector.shapefile`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:122
msgid "SHAPE_RESTORE_SHX: :ref:`vector.shapefile`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:123
msgid "SHAPE_REWIND_ON_WRITE: :ref:`vector.shapefile`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:124
msgid "SSL_CERT_FILE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:125
msgid "SWIFT_AUTH_TOKEN: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:126
msgid "SWIFT_AUTH_V1_URL: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:127
msgid "SWIFT_KEY: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:128
msgid "SWIFT_STORAGE_URL: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:129
msgid "SWIFT_USER: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:130
msgid "TAB_APPROX_GEOTRANSFORM: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:131
msgid "TIFF_USE_OVR: :ref:`raster.gtiff`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:132
msgid "USE_RRD:"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:136
msgid "VRT_VIRTUAL_OVERVIEWS: :ref:`raster.vrt`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:137
msgid "VSIOSS_CHUNK_SIZE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:138
msgid "VSIS3_CHUNK_SIZE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:139
msgid "VSI_CACHE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:140
msgid "VSI_CACHE_SIZE: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:141
msgid "WEBHDFS_DATANODE_HOST: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:142
msgid "WEBHDFS_DELEGATION: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:143
msgid "WEBHDFS_PERMISSION: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:144
msgid "WEBHDFS_REPLICATION: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/configoptions_index_generated.rst:145
msgid "WEBHDFS_USERNAME: :ref:`virtual_file_systems`"
msgstr ""

#: ../../source/user/gnm_data_model.rst:5
msgid "Geographic Networks Data Model"
msgstr ""

#: ../../source/user/gnm_data_model.rst:7
msgid ""
"This document is intended to describe the purpose and the structure of "
"Geographic Network Model classes. GNM is the part of GDAL and provides "
"the methods of creating, managing and analysing geographical networks."
msgstr ""

#: ../../source/user/gnm_data_model.rst:9
msgid ""
"The key purpose of GNM classes: - To provide an abstraction for different"
" existed network formats, like GDAL (previously OGR) provides one for "
"spatial vector formats; - To provide a network functionality to those "
"spatial formats which does not have it at all."
msgstr ""

#: ../../source/user/gnm_data_model.rst:14
msgid "General concept"
msgstr ""

#: ../../source/user/gnm_data_model.rst:16
msgid ""
"Any real-world network can be represented as a set of vector data, which "
"can be itself represented in GDAL as a GDALDataset. In GNM this data "
"consists of two parts. Network's topology (graph), network's metadata "
"(name/description), set of special feature identifiers, etc. belong to "
"the \"network part\", while the common for GDAL layers, features, "
"geometries belong to the \"spatial/attribute part\". In order to work "
"with the datasets of different formats the following classes were "
"designed in GNM."
msgstr ""

#: ../../source/user/gnm_data_model.rst:19
msgid "Network"
msgstr ""

#: ../../source/user/gnm_data_model.rst:21
msgid ""
":cpp:class:`GNMNetwork` represents an abstract network. The network data "
"and spatial/attribute data in a dataset of some format in fact can be not"
" separable (just additional layers/fields/tags), while the concrete "
"implementation of GNMNetwork \"knows\" which data from the whole dataset "
"refers to \"network part\" and is able to operate it. GNMNetwork allows "
"user the following:"
msgstr ""

#: ../../source/user/gnm_data_model.rst:23
msgid ""
"-Setting/unsetting connections. These generic methods of building the "
"network topology (automatically and manually) receive the identifiers of "
"features being connected in a common way, while the concrete "
"implementation knows where and how to store and build the topology; "
"-Reading connections. The generic methods return the connections in the "
"common way; -Adding/removing layers/features. When the feature or layer "
"is being added to the network some actions can be initiated (weights "
"change in a graph, cascade changes in connected features). Concrete "
"GNMNetwork describes how it is done. -Defining network's business logic "
"or behavior. It can be expressed in network rules or "
"constraints/restrictions. Expected that each rule can be set from a "
"string and each concrete GNMNetwork will transform it to the internal "
"look."
msgstr ""

#: ../../source/user/gnm_data_model.rst:29
msgid "Format"
msgstr ""

#: ../../source/user/gnm_data_model.rst:31
msgid ""
"GNMNetwork inherits GDALDataset and looks like OGRDatasource with "
"additional functionality. There are a set of GDAL drivers for networks. "
"The generic network implementation in GDAL provides additional "
"functionality like rules, virtual edges and vertices. Also, while editing"
" the feature the network control the network rules and other specific, "
"and can deny saving edits. The other network drivers (pgRouting, OSRM, "
"GraphHopper, etc.) should provide the basic functionality via the "
"GNMNetwork class."
msgstr ""

#: ../../source/user/gnm_data_model.rst:34
msgid "Network formats"
msgstr ""

#: ../../source/user/gnm_data_model.rst:36
msgid ""
"To add a ``native`` support of the existed network format (like PostGIS "
"pgRouting, Oracle Spatial Networks, topology in GML, etc.) to GNM the "
"developer should implement the corresponding GNMDriver-GNMNetwork "
"interface. But there is also a capability to use the ``generic`` network "
"format, which is already implemented in GNM as a special class. It can be"
" extremely useful when there is a need to create and use a network in the"
" format that initially does not have its \"network part\" (like ESRI "
"Shapefile) directly."
msgstr ""

#: ../../source/user/gnm_data_model.rst:39
msgid "GNMGenericNetwork"
msgstr ""

#: ../../source/user/gnm_data_model.rst:41
msgid ""
":cpp:class:`GNMGenericNetwork` is a concrete implementation of the "
"GNMNetwork. GNMGenericNetwork intends to support the most GDALDataset "
"drivers (depends on the corresponding driver capabilities). Technically "
"the network format abstraction is achieved with the help of GDAL "
"abstraction: datasets and layers approach. GNMGdalNetwork aggregates a "
"GDALDataset instance where the \"network part\" is represented as a set "
"of \"system layers\" (wkbNone geometry, specific attribute fields) and "
"the spatial/attribute data is regarded as the set of \"class layers\" or "
"\"classes\" (layers with geometries and attributes, as usual). The "
"\"network part\" is created and maintained by GNMGenericNetwork "
"automatically and provides methods to work with it."
msgstr ""

#: ../../source/user/gnm_data_model.rst:43
msgid ""
"The way of describing real-world networks by GNMGenericNetwork intends to"
" be a generic, because: -The most general type of graph is used, which "
"holds every useful information: directions of edges "
"(directed/undirected), edge costs (weighted/unweighted). This graph is "
"stored as an incidence list: source vertex feature id, target vertex "
"feature id, edge feature id, direct cost, inverse cost, direction of "
"edge; -Any feature with any geometry can be the vertex or the edge in a "
"graph. Also, it may be no feature “under” the connection's edge at all "
"(actually the virtual edge is created for this case). All this means that"
" user operates with the feature identifiers, while the GNMGenericNetwork "
"guaranties the connections integrity among features; -Any feature in the "
"network will gain the unique identifier – Global Feature Identifier "
"(GFID) which allows unify any amount of \"class layers\" under one "
"network; -GNMGenericNetwork uses its own way to determine the network's "
"business logic. See :cpp:func:`GNMGenericNetwork::CreateRule` for more "
"details."
msgstr ""

#: ../../source/user/gnm_data_model.rst:49
msgid ""
"See the :cpp:class:`GNMGenericNetwork` class documentation for more "
"details."
msgstr ""

#: ../../source/user/gnm_data_model.rst:51
msgid ""
"The network of common format has also the following important features: "
"-The single spatial reference system is used in the network, that means "
"that each feature which appears in the network will be transformed to "
"this SRS; -The network always created void and there is a need to import "
"or create features; -It is not possible to remove the \"network part\" "
"from the dataset – only delete the whole network with all data. The "
"deletion is made layer by layer and deletes only system and class layers "
"which registered in the network."
msgstr ""

#: ../../source/user/gnm_data_model.rst:57
msgid "Network analysis"
msgstr ""

#: ../../source/user/gnm_data_model.rst:59
msgid ""
"The network analysis in GNM is implemented in :cpp:class:`GNMNetwork` "
"object."
msgstr ""

#: ../../source/user/gnm_data_model.rst:61
msgid ""
":cpp:class:`GNMGenericNetwork` holds the graph in memory in STL "
"containers and provides basic algorithms which return the results in the "
"array-form (e.g. std::vector full of path's edges and vertices GFIDs). "
"But the caller get a result as OGRLayer there features get from layers "
"consist the network. Also some additional fields created (VERTEX/EDGE "
"indicator field, GFID, layer name, etc.). The caller have to free the "
"result OGRLayer via :cpp:func:`GDALDataset::ReleaseResultSet`"
msgstr ""

#: ../../source/user/index.rst:5
msgid "User oriented documentation"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:5
msgid "Multidimensional Raster Data Model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:7
msgid ""
"This document attempts to describe the GDAL multidimensional data model, "
"that has been added in GDAL 3.1. That is the types of information that a "
"GDAL multidimensional dataset can contain, and their semantics."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:11
msgid ""
"The multidimensional raster API is a generalization of the traditional "
":ref:`raster_data_model`, to address 3D, 4D or higher dimension datasets."
" Currently, it is limited to basic read/write API, and is not that much "
"plugged into other higher level utilities."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:17
msgid ""
"It is strongly inspired from the netCDF and HDF5 API and data models. See"
" `HDF5 format and data model "
"<https://portal.opengeospatial.org/files/81716>`_."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:20
msgid ""
"A :cpp:class:`GDALDataset` with mulidimensional content contains a root "
":cpp:class:`GDALGroup`."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:24
msgid "Group"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:26
msgid ""
"A :cpp:class:`GDALGroup` (modelling a `HDF5 Group "
"<https://portal.opengeospatial.org/files/81716#_hdf5_group>`_) is a named"
" container of GDALAttribute, GDALMDArray or other GDALGroup. Hence "
"GDALGroup can describe a hierarchy of objects."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:31
msgid "Attribute"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:33
msgid ""
"A :cpp:class:`GDALAttribute` (modelling a `HDF5 Attribute "
"<https://portal.opengeospatial.org/files/81716#_hdf5_attribute>`_) has a "
"name and a value, and is typically used to describe a metadata item. The "
"value can be (for the HDF5 format) in the general case a multidimensional"
" array of \"any\" type (in most cases, this will be a single value of "
"string or numeric type)"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:39
msgid "Multidimensional array"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:41
msgid ""
"A :cpp:class:`GDALMDArray` (modelling a `HDF5 Dataset "
"<https://portal.opengeospatial.org/files/81716#_hdf5_dataset>`_) has a "
"name, a multidimensional array, references a number of GDALDimension, and"
" has a list of GDALAttribute."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:45
msgid ""
"Most drivers use the row-major convention for dimensions: that is, when "
"considering that the array elemnts are stored consecutively in memory, "
"the first dimension is the slowest varying one (in a 2D image, the row), "
"and the last dimension the fastest varying one (in a 2D image, the "
"column). That convention is the default convention used for NumPy arrays,"
" the MEM driver and the HDF5 and netCDF APIs. The GDAL API is mostly "
"agnostic about that convention, except when passing a NULL array as the "
"*stride* parameter for the :cpp:func:`GDALAbstractMDArray::Read` and  "
":cpp:func:`GDALAbstractMDArray::Write` methods. You can refer to `NumPy "
"documentation about multidimensional array indexing order issues "
"<https://docs.scipy.org/doc/numpy/reference/internals.html"
"#multidimensional-array-indexing-order-issues>`_"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:55
msgid "a GDALMDArray has also optional properties:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:57
msgid "Coordinate reference system: :cpp:class:`OGRSpatialReference`"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:58
msgid "No data value:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:59
msgid "Unit"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:60
msgid "Offset, such that unscaled_value = offset + scale * raw_value"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:61
msgid "Scale, such that unscaled_value = offset + scale * raw_value"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:64
msgid "Dimension"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:66
msgid ""
"A :cpp:class:`GDALDimension` describes a dimension / axis used to index "
"multidimensional arrays. It has the following properties:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:69
msgid "a name"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:70
msgid ""
"a size, that is the number of values that can be indexed along the "
"dimension"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:72
msgid ""
"a type, which is a string giving the nature of the dimension. Predeined "
"values are: HORIZONTAL_X, HORIZONTAL_Y, VERTICAL, TEMPORAL, PARAMETRIC "
"Other values might be used. Empty value means unknown."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:75
msgid ""
"a direction. Predefined values are: EAST, WEST, SOUTH, NORTH, UP, DOWN, "
"FUTURE, PAST Other values might be used. Empty value means unknown."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:78
msgid ""
"a reference to a GDALMDArray variable, typically one-dimensional, "
"describing the values taken by the dimension. For a georeferenced "
"GDALMDArray and its X dimension, this will be typically the values of the"
" easting/longitude for each grid point."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:84
msgid "Data Type"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:86
msgid ""
"A :cpp:class:`GDALExtendedDataType` (modelling a `HDF5 datatype "
"<https://portal.opengeospatial.org/files/81716#_hdf5_datatype>`_) "
"describes the type taken by an individual value of a GDALAttribute or "
"GDALMDArray. Its class can be NUMERIC, STRING or COMPOUND. For NUMERIC, "
"the existing :cpp:enum:`GDALDataType` enumerated values are supported. "
"For COMPOUND, the data type is a list of members, each member being "
"described by a name, a offset in byte in the compound structure and a "
"GDALExtendedDataType."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:97
msgid "The HDF5 modelisation allows for more complex datatypes."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:101
msgid ""
"HDF5 does not have native data types for complex values whereas "
"GDALDataType does. So a driver may decide to expose a GDT\\_Cxxxx "
"datatype from a HDF5 Compound data type representing a complex value."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:106
msgid "Differences with the GDAL 2D raster data model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:108
msgid ""
"The concept of GDALRasterBand is no longer used for multidimensional. "
"This can be modelled as either different GDALMDArray, or using a compound"
" data type."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:113
msgid ""
"Bridges between GDAL 2D classic raster data model and multidimensional "
"data model"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:115
msgid ""
"The :cpp:func:`GDALRasterBand::AsMDArray` and "
":cpp:func:`GDALMDArray::AsClassicDataset` can be used to respectively "
"convert a raster band to a MD array or a 2D dataset to a MD array."
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:120
msgid "Applications"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:122
msgid ""
"The following applications can be used to inspect and manipulate "
"multidimensional datasets:"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:125
msgid ":ref:`gdalmdiminfo`"
msgstr ""

#: ../../source/user/multidim_raster_data_model.rst:126
msgid ":ref:`gdalmdimtranslate`"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:5
msgid "Feature Style Specification"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:7
msgid "Version 0.016 - 2018-12-03"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:10
msgid "1. Overview"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:12
msgid ""
"This document defines the way feature style information (i.e. colors, "
"line width, symbols, etc.) should be handled at the various levels in "
"GDAL's vector drivers (OGR)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:16
msgid ""
"The following GDAL vector drivers have varying levels of support for "
"feature styles: :ref:`DWG (libopencad) <vector.cad>`, :ref:`DWG (Teigha) "
"<vector.dwg>`, :ref:`DXF <vector.dxf>`, :ref:`KML (libkml) "
"<vector.libkml>`, :ref:`MapInfo <vector.mitab>`, :ref:`MicroStation DGN "
"v7 <vector.dgn>` and :ref:`DGN v8 <vector.dgnv8>`, :ref:`OpenJUMP JML "
"<vector.jml>` and :ref:`PDF <raster.pdf>`."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:24
msgid "1.1 Style is a property of Feature object"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:26
msgid ""
"Conceptually, the feature style should be seen as a property of a "
"feature. Even though some systems store style information in a special "
"attribute, in GDAL it is more consistent to see the style as a property, "
"just the same way the geometry of a feature is also a property."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:31
msgid ""
"This does not prevent us from storing the style information in an "
"attribute when writing to some formats that have no provision for styles "
"(e.g. E00). But then at the time such a dataset is opened through GDAL, "
"the name of the attribute that contains style information should either "
"be specified in some metadata, or be specified by the user."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:37
msgid ""
"Also, in the SFCOM interface, the style information will be stored in an "
"attribute just like the geometry is."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:41
msgid "1.2 Feature Styles can be stored at 2 levels"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:43
msgid ""
"The style defines the way a feature should be drawn, but it is very "
"common to have several features that share the same style. In those "
"cases, instead of duplicating the style information on each feature, we "
"will provide a more efficient way to share style information."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:48
msgid "There are two levels at which style information can be found:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:50
msgid ""
"A **dataset** can have a table of pre-defined styles that can then be "
"referred to by the layers or by the individual features. The mechanism "
"for that is defined further down in this document."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:53
msgid ""
"A **feature (OGRFeature object)** can have its own complete style "
"definition. Alternatively, a feature can be linked to a style in the "
"dataset's table of styles. This can save storage space when the same "
"styles are reused often."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:58
msgid ""
"It should be possible to have style information stored at one or more of "
"the various levels while working on a given dataset. The level(s) where "
"the style is actually stored will depend on the most efficient approach "
"for the format we are dealing with."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:64
msgid "1.3 Drawing Tools"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:66
msgid ""
"We define a small set of drawing tools that are used to build style "
"definitions:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:69
msgid "**PEN**: For linear styles"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:70
msgid "**BRUSH**: For filling areas"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:71
msgid "**SYMBOL**: Point symbols"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:72
msgid "**LABEL**: For annotations"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:74
msgid ""
"Each drawing tool can take a number of parameters, all optional. The "
"style syntax is built in a way that a system that cannot support all "
"possible parameters can safely skip and ignore the parameters it does not"
" support. This will also make it easy to extend the specification in the "
"future without breaking existing code or applications."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:80
msgid ""
"A style can use a single tool, or use a combination of one or more tools."
" By combining the use of several tools in a style, one can build "
"virtually any type of graphical representation. For instance, the SYMBOL "
"tool can be used to place spaced symbols along a line. Also, the LABEL "
"tool can be used to place text on a point, stretch it along a line, or "
"even, by combining the PEN tool with the LABEL tool, use the line as a "
"leader to the text label, and draw the text string on the last vertex of "
"the line."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:89
msgid ""
"Of course, few systems can support all that. But the intention here is to"
" have a style specification that is powerful and flexible enough to allow"
" all types of formats to exchange style information with the least "
"possible loss."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:95
msgid "1.4 Feature attributes can be used by style definitions"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:97
msgid ""
"In some cases, it might be useful for a style definition to refer to an "
"attribute field on the feature for a given tool parameter's value instead"
" of having a hardcoded value inside the style itself."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:101
msgid ""
"Example of this are text angle, text string, etc... these values change "
"for every single text label, but we can share the rest of the label style"
" at the layer level if we lookup the angle and text string in an "
"attribute on each feature."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:106
msgid ""
"The syntax of the style string provides a way that any parameter value "
"can be either a constant value, or a lookup to an attribute field."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:110
msgid "1.5 Tool parameter units"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:112
msgid ""
"Several parameter values can be expressed in different measurement units "
"depending on the file format you are dealing with. For instance, some "
"systems express line width, or text height in points, other in pixels, "
"and others use ground units. In order to accommodate all that, all "
"parameters can be specified in one of the following units systems:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:118
msgid "**g**: Map Ground Units (whatever the map coordinate units are)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:119
msgid "**px**: Pixels"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:120
msgid "**pt**: Points (1/72 inch)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:121
msgid "**mm**: Millimeters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:122
msgid "**cm**: Centimeters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:123
msgid "**in**: Inches"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:125
msgid ""
"Some tools will have to be provided at the GDAL client level to simplify "
"the conversion of any value from one units system to another. This would "
"imply that the GDAL client has to specify a map scale so that conversions"
" from ground units to paper/pixel units can be performed."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:133
msgid "2. Feature Style String"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:135
msgid ""
"As was mentioned earlier, styles definitions will usually be stored as "
"strings, either in a per-layer (or per-dataset) table, or directly in the"
" features."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:140
msgid "2.1 Examples"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:142
msgid "Here are some example style definition strings:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:144
msgid "A 5 pixels wide red line: ``PEN(c:#FF0000,w:5px)``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:146
msgid ""
"A polygon filled in blue, with a black outline: "
"``BRUSH(fc:#0000FF);PEN(c:#000000)``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:148
msgid "A point symbol: ``SYMBOL(c:#00FF00,id:\"points.sym-45,ogr-sym-7\")``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:150
msgid ""
"A text label, taking the text string from the \"text_attribute\" "
"attribute field: ``LABEL(f:\"Times New "
"Roman\",s:12pt,t:{text_attribute})\"``"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:154
msgid ""
"Here is what a style table that contains all the above styles could look "
"like:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:164
msgid ""
"Then individual features can refer to styles from the table above using "
"the \"@\" character followed by the style name in their style property."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:167
msgid ""
"For instance, a feature with its style set to \"@road\" would be drawn as"
" a red line."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:171
msgid "2.2 Style String Syntax"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:173
msgid "Each feature object has a style property (a string):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:179
msgid "``<style_def>`` is defined later in this section."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:180
msgid ""
"An empty style string means that the feature's style is unspecified. It "
"does not indicate that the feature is invisible – an invisible feature "
"may be indicated using a fully transparent color, like PEN(c:#00000000)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:184
msgid ""
"``@<style_name>`` is a reference to a predefined style in the layer or "
"the dataset's style table. The layer's table is looked up first, and if "
"style_name is not found there then the dataset's table will be looked up."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:188
msgid ""
"Finally, ``{<field_name>}`` means that the style property should be read "
"from the specified attribute field."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:191
msgid ""
"The <style_def> is the real style definition. It is a combination of 1 or"
" more style parts separated by semicolons. Each style_part uses a drawing"
" tool to define a portion of the complete graphical representation:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:214
msgid ""
"By default, style parts are drawn in the order that they appear in the "
"style_def string unless each part is assigned a different level parameter"
" value (see the level parameter definition)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:218
msgid ""
"All drawing tool parameters are optional. So it is legal to have a "
"style_part with an empty drawing tool parameter list (e.g. \"PEN()\"). "
"For each parameter that does not have any specified value, it is up to "
"the client application to use its own default value. This document "
"provides advisory default values for most parameters, but it is not "
"mandatory for an application to use those default values."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:225
msgid ""
"When {<field_name>} is used for a tool_param value, several options are "
"available with respect to the units. The units can be specified after the"
" field name as in PEN(c:#FF0000,w:{line_width}pt) or can be left "
"unspecified as in PEN(c:#FF0000,w:{line_width}). In the first case, the "
"default units will be points (pt), but if the attribute field line_width "
"contains a value followed by a units abbreviation (e.g. \"5px\") then the"
" units specified in the attribute fields have precedence (in this case "
"pixels). Note that the attribute field does not have to contain a units "
"value and probably won't in most cases; it is just an optional feature to"
" be able to override the default units from inside an attribute field's "
"value."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:238
msgid "2.3 Pen Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:240
#: ../../source/user/ogr_feature_style.rst:364
#: ../../source/user/ogr_feature_style.rst:459
#: ../../source/user/ogr_feature_style.rst:586
msgid "**Applicable geometry types:**"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:242
msgid ""
"Point: When applied to a point, a PEN tool can only define the color and "
"the size of the point to draw."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:244
msgid "Polyline: This is the most obvious case."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:245
msgid "Polygon: Defines the way the outline of a polygon should be drawn."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:247
msgid ""
"Here is the current list of PEN tool parameters. While this is sufficient"
" to cover all the cases that we have encountered so far, new parameters "
"might be added in the future to handle new types of graphical "
"representation. Note again that all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:252
msgid "``c``: **Pen Color**, expressed hexadecimal (#RRGGBB[AA])"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:254
#: ../../source/user/ogr_feature_style.rst:377
#: ../../source/user/ogr_feature_style.rst:386
#: ../../source/user/ogr_feature_style.rst:519
msgid ""
"[AA]: the last 2 digits define the alpha channel value, with 0 being "
"transparent and FF being opaque. The default is FF (opaque)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:256
msgid "Suggested default: black (c:#000000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:257
msgid "Example: PEN(c:#FF0000), or PEN(C:#FF0000FF)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:260
msgid ""
"``w``: **Pen Width**, expressed as a numeric value with units (g, px, pt,"
" mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:263
msgid "Suggested default: 1 pixel"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:264
msgid "Examples: PEN(c:#FF0000,w:5px), PEN(w:3pt), PEN(w:50g)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:266
msgid ""
"``p``: **Pattern**. To create dash lines. A list of pen-down/pen-up "
"distances"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:268
#: ../../source/user/ogr_feature_style.rst:319
#: ../../source/user/virtual_file_systems.rst:55
#: ../../source/user/virtual_file_systems.rst:98
#: ../../source/user/virtual_file_systems.rst:125
#: ../../source/user/virtual_file_systems.rst:439
#: ../../source/user/virtual_file_systems.rst:457
#: ../../source/user/virtual_file_systems.rst:528
msgid "Examples:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:270
msgid "|style_pen1| = PEN(c:#FF0000,w:2px,p:\"4px 5px\"). short-dash line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:272
msgid "|style_pen2| = PEN(c:#FF0000,w:2px,p:\"10px 5px\"). long-dash line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:274
msgid ""
"|style_pen3| = PEN(c:#FF0000,w:2px,p:\"10px 5px 4px 5px\"). long/short "
"dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:287
msgid ""
"``id``: **Comma-delimited list of Pen Names or Ids** For systems that "
"identify pens with a name or an id. The names in the comma-delimited list"
" of ids are scanned until one is recognized by the target system. Pen Ids"
" can be either system-specific ids (see further below) or be one of the "
"pre-defined OGR pen ids for known line patterns. The id parameter should "
"always include one of the OGR ids at the end of the comma-delimited list "
"of ids so that an application never has to rely on understanding system-"
"specific ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:296
msgid "Here is the current list of OGR pen ids (this could grow time):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:298
msgid "ogr-pen-0: solid (the default when no id is provided)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:299
msgid "ogr-pen-1: null pen (invisible)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:300
msgid "ogr-pen-2: dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:301
msgid "ogr-pen-3: short-dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:302
msgid "ogr-pen-4: long-dash"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:303
msgid "ogr-pen-5: dot line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:304
msgid "ogr-pen-6: dash-dot line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:305
msgid "ogr-pen-7: dash-dot-dot line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:306
msgid "ogr-pen-8: alternate-line (sets every other pixel)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:308
msgid ""
"System-specific ids are very likely to be meaningful only to that "
"specific system that created them. The ids should start with the system's"
" name, followed by a dash (-), followed by whatever information is "
"meaningful to that system (a number, a name, a filename, etc.). e.g. "
"\"mapinfo-5\", or \"mysoft-lines.sym-123\", or \"othersystems-funnyline\""
msgstr ""

#: ../../source/user/ogr_feature_style.rst:314
msgid ""
"System-specific ids are allowed in order to prevent loss of information "
"when dealing with data from systems that store line patterns in external "
"files or that have their own pre-defined set of line styles (for "
"instance, to do a MapInfo MIF to TAB translation without any loss."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:321
msgid "PEN(c:#00FF00,id:\"ogr-pen-0\") - simple solid line"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:322
msgid ""
"PEN(c:#00FF00,id:\"mapinfo-5,ogr-pen-7\") - corresponds to MapInfo's Pen "
"#5, and a system that can't understand MapInfo pens falls back on the "
"default \"ogr-pen-7\" pen (dot-dot line)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:327
msgid "``cap``: **Pen Cap** - Set the shape of  end points of lines."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:329
msgid ""
"\"cap:b\" - Butt: The ends of the line don't extend beyond the end "
"points. This is the default."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:331
msgid ""
"\"cap:r\" - Round: Terminate lines with a circle whose diameter is equal "
"to the line width."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:333
msgid ""
"\"cap:p\" - Projecting: Similar to Butt, but the ends of the line extend "
"by half of line width beyond the end points."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:337
msgid "``j``: **Pen Join** - Set the shape of the join point (vertex) of lines."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:339
msgid ""
"\"j:m\" - Miter: Extend the outer edge of the lines until they touch. "
"This is the default."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:341
msgid ""
"\"j:r\" - Rounded: Join lines with an arc whose center is at the join "
"point and whose diameter is equal to the line width."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:343
msgid ""
"\"j:b\" - Bevel: Join the lines with butt end caps and fill the resulting"
" triangular notch at the join position."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:347
msgid ""
"``dp``: **Perpendicular Offset**, expressed as a numeric value units (g, "
"px, pt, mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:350
msgid ""
"Offset from the line center. If the offset is negative then the pen will "
"be drawn left of the main segment and right otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:354
#: ../../source/user/ogr_feature_style.rst:449
#: ../../source/user/ogr_feature_style.rst:566
#: ../../source/user/ogr_feature_style.rst:713
msgid ""
"``l``: **Priority Level** - Numeric value defining the order in which "
"style parts should be drawn."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:357
#: ../../source/user/ogr_feature_style.rst:452
#: ../../source/user/ogr_feature_style.rst:569
#: ../../source/user/ogr_feature_style.rst:716
msgid ""
"Lower priority style parts are drawn first, and higher priority ones are "
"drawn on top. If priority level is unspecified, the default is 1."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:362
msgid "2.4 Brush Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:366
msgid "Point: Not applicable."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:367
msgid "Polyline: Not applicable."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:368
msgid "Polygon: Defines the way the surface of a polygon is filled."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:370
msgid ""
"Here is the current list of BRUSH tool parameters. Note again that that "
"this list may be extended in the future, and all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:374
msgid ""
"``fc``: **Brush ForeColor**, expressed in hexadecimal (#RRGGBB[AA]). Used"
" for painting the brush pattern itself."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:379
#, python-format
msgid "Suggested default: 50% grey (c:#808080)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:380
msgid "Example: BRUSH(fc:#FF0000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:383
msgid ""
"``bc``: **Brush BackColor**, expressed in hexadecimal (#RRGGBB[AA]). Used"
" for painting the area behind the brush pattern."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:388
msgid "Suggested default: transparent (c:#FFFFFF00)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:389
msgid "Example: BRUSH(fc:#FF0000,bc:#FFEEDD)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:392
msgid ""
"``id``: **Brush Name or Brush Id** - Comma-delimited list of brush names "
"or ids. The names in the comma-delimited list of ids are scanned until "
"one is recognized by the target system."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:396
msgid ""
"Brush Ids can be either system-specific ids (see furtherbelow) or be one "
"of the pre-defined OGR brush ids for well known brush patterns. The id "
"parameter should always include one of the OGR ids at the end of the "
"comma-delimited list of ids so that an application never has to rely on "
"understanding system-specific ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:402
msgid "Here is the current list of OGR brush ids (this could grow over time):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:406
msgid "ogr-brush-0: solid foreground color (the default when no id  is provided)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:407
msgid ""
"ogr-brush-1: null brush (transparent - no fill, irrespective of fc or bc "
"values"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:409
msgid "ogr-brush-2: horizontal hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:410
msgid "ogr-brush-3: vertical hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:411
msgid "ogr-brush-4: top-left to bottom-right diagonal hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:412
msgid "ogr-brush-5: bottom-left to top-right diagonal hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:413
msgid "ogr-brush-6: cross hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:414
msgid "ogr-brush-7: diagonal cross hatch"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:416
msgid ""
"Like with Pen Ids, system-specific brush ids are very likely to be "
"meaningful only to that specific system that created them. The ids should"
" start with the system's name, followed by a dash (-), followed by "
"whatever information is meaningful to that system (a number, a name, a "
"filename, etc.)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:421
msgid ""
"The following conventions will be used for common system-specific brush "
"ids:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:423
msgid "\"bmp-filename.bmp\" for Windows BMP patterns"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:425
msgid ""
"Other conventions may be added in the future (such as vector symbols, "
"WMF, etc)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:429
msgid ""
"``a``: **Angle** - Rotation angle (in degrees, counterclockwise) to apply"
" to the brush pattern."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:433
msgid "``s``: **Size or Scaling Factor** - Numeric value with or without units."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:435
msgid ""
"If units are specified, then this value is the absolute size to draw the "
"brush or symbol. If no units are specified then it is taken as a scaling "
"factor relative to the symbol's default size."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:440
msgid ""
"``dx``, ``dy``: **Spacing**, expressed as a numeric value with units (g, "
"px, pt, mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:443
msgid ""
"If filling an area using point symbols, these values will define the "
"spacing to use between them. \"dx\" is the horizontal distance between "
"the center of two adjacent symbols and \"dy\" is the vertical distance. "
"The default is to use the symbol's bounding box width and height for dx "
"and dy respectively."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:457
msgid "2.5 Symbol Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:461
msgid "Point: Place a symbol at the point's location"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:462
msgid ""
"Polyline: Place symbols along the polyline, either at each vertex, or "
"equally spaced."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:464
msgid "Polygon: Place the symbols on the outline of the polygon."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:466
msgid ""
"Here is the current list of SYMBOL tool parameters. Note again that that "
"this list may be extended in the future, and all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:470
msgid ""
"``id``: **Symbol Name or Id** - Comma-delimited list of symbol names or "
"ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:472
msgid ""
"The names in the comma-delimited list of ids are scanned until one is "
"recognized by the target system."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:475
msgid ""
"Symbol Ids can be either system-specific ids (see further below) or be "
"one of the pre-defined OGR symbol ids for well known symbols. The id "
"parameter should always include one of the OGR ids at the end of the "
"comma-delimited list of ids so that an application never has to rely on "
"understanding system-specific ids."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:481
msgid "Here is the current list of OGR symbol ids (this could grow over time):"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:485
msgid "ogr-sym-0: cross (+)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:486
msgid "ogr-sym-1: diagcross (X)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:487
msgid "ogr-sym-2: circle (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:488
msgid "ogr-sym-3: circle (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:489
msgid "ogr-sym-4: square (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:490
msgid "ogr-sym-5: square (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:491
msgid "ogr-sym-6: triangle (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:492
msgid "ogr-sym-7: triangle (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:493
msgid "ogr-sym-8: star (not filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:494
msgid "ogr-sym-9: star (filled)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:495
msgid ""
"ogr-sym-10: vertical bar (can be rotated using angle attribute to produce"
" diagonal bar)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:498
msgid ""
"Like with Pen Ids, system-specific symbol ids are very likely to be "
"meaningful only to that specific system that created them. The ids should"
" start with the system's name, followed by a dash (-), followed by "
"whatever information is meaningful to that system (a number, a name, a "
"filename, etc.)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:503
msgid ""
"The following conventions will be used for common system-specific symbol "
"ids:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:505
msgid "\"bmp-filename.bmp\" for Windows BMP symbols"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:506
#, python-format
msgid ""
"\"font-sym-%d\" for a font symbols, where %d is a glyph number inside a "
"font, font family is defined by **f** style field."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:509
msgid ""
"Other conventions may be added in the future (such as vector symbols, "
"WMF, etc.)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:513
msgid ""
"``a``: **Angle** - Rotation angle (in degrees, counterclockwise) to apply"
" to the symbol."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:517
msgid "``c``: **Symbol Color**, expressed in hexadecimal (#RRGGBB[AA])"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:521
msgid "Suggested default symbol color: black (c:#000000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:522
#: ../../source/user/ogr_feature_style.rst:561
#: ../../source/user/ogr_feature_style.rst:578
#: ../../source/user/ogr_feature_style.rst:603
msgid "Example ::"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:526
msgid "``o``: **Symbol Outline Color**, expressed in hexadecimal (#RRGGBB[AA])."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:528
msgid ""
"If this parameter is set, an additional halo or border of this color is "
"drawn around the symbol."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:532
msgid "``s``:  **Size or Scaling Factor** - Numeric value with or without units."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:534
msgid ""
"If units are specified, then this value is the absolute size to draw the "
"symbol. If no units are specified then it is taken as a scaling factor "
"relative to the symbol's default size."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:539
msgid ""
"``dx``, ``dy``: **X and Y offset**, of the symbol's insertion point, "
"expressed as a numeric value with units (g, px, pt, mm, cm, in)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:542
msgid ""
"Applies to point geometries, and to symbols placed at each vertex of a "
"polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:546
msgid ""
"``ds``, ``dp``, ``di``: **Spacing parameters** for symbols spaced along a"
" line, expressed as a numeric value with units (g, px, pt, mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:549
msgid ""
"``ds`` is the step to use when  placing symbols along the line. By "
"default, symbols applied to a feature with a line geometry are placed at "
"each vertex, butsetting \"ds\" triggers the placement of symbols at an "
"equal distance along the line. \"ds\" has no effect for a feature with a "
"point geometry."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:555
msgid ""
"``dp`` can be used together with \"ds\" to specify the perpendicular "
"distance between the symbols' center and the line along which they're "
"placed."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:558
msgid ""
"``di`` can be used to specify an initial offset from the beginning of the"
" line."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:573
#: ../../source/user/ogr_feature_style.rst:598
msgid "``f``: **Font Name** - Comma-delimited list of fonts names."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:575
#: ../../source/user/ogr_feature_style.rst:600
msgid ""
"Works like the CSS font-family property: the list of font names is "
"scanned until a known font name is encountered."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:584
msgid "2.6 Label Tool Parameters"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:588
msgid "Point: Place a text label at the point's location"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:589
msgid "Polyline: Place text along the polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:590
msgid ""
"Polygon: Place a label at the centroid of the polygon. All parameters "
"behave exactly as if the geometry was a point located at the polygon's "
"centroid."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:594
msgid ""
"Here is the current list of LABEL tool parameters. Note again that that "
"this list may be extended in the future, and all parameters are optional:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:608
msgid ""
"``s``: **Font Size**, expressed as a numeric value with units (g, px, pt,"
" mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:611
msgid ""
"In the CAD world, font size, or \"text height\", determines the height of"
" a capital letter - what typographers call \"cap height\". But in the "
"worlds of typesetting, graphics and cartography, font size refers to the "
"\"em height\" of the font, which is taller than the cap height. This "
"means that text assigned a height of 1 inch in a DXF file will look "
"larger (often about 45% larger) than 72-point text in a PDF file or "
"MapInfo map. At present, GDAL vector drivers treat the \"s:\" style "
"string value as whichever font size measurement (cap height or em height)"
" is used natively by that format, which may result in incorrect text "
"sizing when using the ogr2ogr tool. This parameter could be subject to "
"clearer specification in the future."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:623
msgid ""
"``t``: **Text String** - Can be a constant string, or a reference to an "
"attribute field's value."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:626
msgid ""
"If a double-quote character or backslash (\\) character is present in the"
" string, it is escaped with a backslash character before it."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:629
msgid "Examples ::"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:636
msgid "``a``: **Angle** - Rotation angle (in degrees, counterclockwise)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:638
msgid ""
"``c``: **Text Foreground Color**, expressed in hexadecimal (#RRGGBB[AA]) "
"Suggested default: black (c:#000000)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:641
msgid ""
"``b``: **Text Background Color** - Color of the filled box to draw behind"
" the label, expressed in hexadecimal (#RRGGBB[AA]). No box drawn if not "
"set."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:644
msgid ""
"``o``: **Text Outline Color** - Color of the text outline (halo in "
"MapInfo terminology), expressed in hexadecimal (#RRGGBB[AA]). No outline "
"if not set."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:647
msgid ""
"``h``: **Shadow Color** - Color of the text shadow, expressed in "
"hexadecimal (#RRGGBB[AA]). No shadow if not set."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:650
#, python-format
msgid ""
"``w``: **Stretch** - The stretch factor changes the width of all "
"characters in the font by the given percentage. For example, a setting of"
" 150 results in all characters in the font being stretched to 150% of "
"their usual width. The default stretch factor is 100."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:655
msgid ""
"``m``: **Label Placement Mode** - How the text is drawn relative to the "
"feature's geometry."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:658
msgid ""
"\"m:p\" - The default. A simple label is attached to a point or to the "
"first vertex of a polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:660
msgid ""
"\"m:l\" - Text is attached to the last vertex of a polyline. A PEN tool "
"can be combined with this LABEL tool to draw the polyline as a leader to "
"the label."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:663
msgid ""
"\"m:s\" - Stretch the text string along a polyline, with an equal spacing"
" between each character."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:665
msgid ""
"\"m:m\" - Place text as a single label at the middle of a polyline (based"
" on total line length)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:667
msgid "\"m:w\" - One word per line segment in a polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:668
msgid ""
"\"m:h\" - Every word of text attached to polyline is placed horizontally "
"in its segment, anchor point is a center of segment."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:670
msgid ""
"\"m:a\" - Every word of text attached to polyline is stretched to fit the"
" segment of polyline and placed along that segment. The anchor point is a"
" start of a segment."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:675
msgid ""
"``p``: **Anchor Position** - A value from 1 to 12 defining the label's "
"position relative to the point to which it is attached"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:678
msgid ""
"There are four vertical alignment modes: *baseline*, *center*, *top* and "
"*bottom*; and three horizontal modes: *left*, *center* and *right*."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:683
msgid ""
"Currently, the precise interpretation of these values (for example, "
"whether accents on uppercase letters sit above or below the alignment "
"point with p:7) differs from file format to file format. This parameter "
"could be subject to clearer specification in the future."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:689
msgid ""
"``dx``, ``dy``: **X and Y offset** of the label's insertion point, "
"expressed as a numeric value with units (g, px, pt, mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:692
msgid "Applies to text placed on a point, or at each vertex of a polyline."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:695
msgid ""
"``dp``: **Perpendicular Offset** for labels placed along a line, "
"expressed as a numeric value with units (g, px, pt, mm, cm, in)."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:698
msgid ""
"\"dp\" specifies the perpendicular distance between the label and the "
"line along which it is placed. If the offset is negative then the label "
"will be shifted left of the main segment, and right otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:703
msgid "``bo``: **Bold** - Set to 1 for bold text. Set to 0 or omitted otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:705
msgid ""
"``it``: **Italic** - Set to 1 for italic text. Set to 0 or omitted "
"otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:707
msgid ""
"``un``: **Underline** - Set to 1 for underlined text. Set to 0 or omitted"
" otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:710
msgid ""
"``st``:  **Strikethrough** - Set to 1 for struck-through text. Set to 0 "
"or omitted otherwise."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:721
msgid "2.7 Styles Table Format"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:723
msgid ""
"For file formats that support tables of styles, then the predefined "
"styles would be stored in that format."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:726
msgid ""
"For file formats that do not support tables of styles, then the style "
"table could be stored in a text file with a .ofs (OGR Feature Styles) "
"extension and the same basename as the dataset. This would apply to "
"formats like Esri Shapefile."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:731
msgid "Here is an example of a .ofs file:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:744
msgid ""
"The first line is a signature with a version number, which must be "
"present."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:747
msgid ""
"The second line (StyleField: \"style\") is the name of the attribute "
"field in which the Feature Style String is stored for each object in the "
"corresponding layer. This is optional, if not set, then the objects in "
"the layer will all share the same style defined in DefaultStyle."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:752
msgid ""
"The third line (DefaultStyle:...) defines the style that applies by "
"default to all objects that have no explicit style."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:755
msgid "Then the list of style definitions follow."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:758
msgid "2.8 Using OGR SQL to transfer the style between the data sources"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:760
msgid ""
"You can use the **OGR_STYLE** special field to extract the feature level "
"style, and ogr2ogr can be used to transfer the style string between data "
"sources according to the following example:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:768
msgid ""
"Without specifying the length of the style field, the output driver may "
"truncate the length to a default value. Therefore it may be necessary to "
"specify the target length manually, like:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:776
msgid ""
"OGR is aware of using the OGR_STYLE field if it exists, and "
"OGRFeature::GetStyleString will return the value of this field if no "
"style string has been specified programmatically."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:785
msgid "3. OGR Support Classes"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:787
msgid ""
"The :cpp:class:`OGRFeature` class has member functions "
":cpp:func:`OGRFeature::GetStyleString`, "
":cpp:func:`OGRFeature::SetStyleString` and "
":cpp:func:`OGRFeature::SetStyleStringDirectly` which may be used to "
"interact with a feature's style string as a C-style string. Additionally,"
" there are :cpp:func:`OGRFeature::GetStyleTable`, "
":cpp:func:`OGRFeature::SetStyleTable` and "
":cpp:func:`OGRFeature::SetStyleTableDirectly` for managing style tables "
"as instances of the :cpp:class:`OGRStyleTable` class."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:794
msgid ""
"The :cpp:class:`OGRLayer` and :cpp:class:`GDALDataset` classes also have "
":cpp:func:`OGRLayer::GetStyleTable`, :cpp:func:`OGRLayer::SetStyleTable` "
"and :cpp:func:`OGRLayer::SetStyleTableDirectly` member functions."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:797
msgid ""
"To parse style strings, the :cpp:class:`OGRStyleMgr` class is used. Each "
"style tool in the string is accessed as an instance of the "
":cpp:class:`OGRStyleTool` class. Lastly, four helper classes exist, one "
"for each tool (:cpp:class:`OGRStylePen`, :cpp:class:`OGRStyleBrush`, "
":cpp:class:`OGRStyleSymbol`, :cpp:class:`OGRStyleLabel`), with each "
"available parameter represented by a getter and setter member function. "
"To understand these classes better, it may be useful to read the "
"`ogr_featurestyle.h "
"<https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogr_featurestyle.h>`__"
" and `ogrfeaturestyle.cpp "
"<https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrfeaturestyle.cpp>`__"
" code files."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:810
msgid "Here is some example C++ code:"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:888
msgid "Revision history"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:890
msgid ""
"**Version 0.016 - 2018-12-03 - Andrew Sudorgin** Restored and documented "
"font property for point symbols"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:892
msgid ""
"**Version 0.015 - 2018-01-08 - Alan Thomas** Update outdated material; "
"minor changes to BRUSH 'id' and LABEL 't', 'bo', 'it', 'un', 'st'; "
"clarify BRUSH 'fc', 'bc', SYMBOL 'o' and LABEL 's', 'w', 'p'"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:896
msgid ""
"**Version 0.014 - 2011-07-24 - Even Rouault** Mention the escaping of "
"double-quote characters in the text string of a LABEL (ticket #3675)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:899
msgid ""
"**Version 0.013 - 2008-07-29 - Daniel Morissette** Added 'o:' for font "
"point symbol outline color (ticket #2509)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:901
msgid ""
"**Version 0.012 - 2008-07-21 - Daniel Morissette** Added 'o:' for text "
"outline color and updated 'b:' to be specifically a filled label "
"background box (ticket #2480)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:904
msgid ""
"**Version 0.011 - 2008-02-28 - Tamas Szekeres** Note about OGR SQL to "
"transfer the style between the data sources"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:906
msgid ""
"**Version 0.010 - 2006-09-23- Andrey Kiselev** Added label styles 'w', "
"'st', 'h', 'm:h', 'm:a', 'p:{10,11,12}'"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:908
msgid ""
"**Version 0.009 - 2005-03-11- Frank Warmerdam** Remove reference to "
"OGRWin, move into ogr distribution"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:910
msgid ""
"**Version 0.008 - 2001-03-21- Frank Warmerdam** Fix minor typos (h:12pt "
"instead of s:12pt in examples)"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:912
msgid ""
"**Version 0.008 - 2000-07-15 - Stephane Villeneuve** Remove style table "
"in Layer. Add forecolor and backcolor to brush."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:914
msgid ""
"**Version 0.007 - 2000-06-22 - Daniel Morissette** Fixed typo and added "
"offset param for PEN."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:916
msgid ""
"**Version 0.006 - 2000-06-20 - Daniel Morissette** Added the OGR-Win idea"
" and made small changes here and there."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:918
msgid ""
"**Version 0.005 - 2000-06-12 - Daniel Morissette** Allow passing of "
"comma-delimited list of names in PEN's \"id\" parameter. Defined system-"
"independent pen style names."
msgstr ""

#: ../../source/user/ogr_feature_style.rst:922
msgid ""
"**Version 0.004 - 2000-06-09 - Stephane Villeneuve** Added PEN cap and "
"join parameters More clearly defined the API"
msgstr ""

#: ../../source/user/ogr_feature_style.rst:925
msgid ""
"**Version 0.003 - 2000-02-15 - Daniel Morissette** First kind-of-complete"
" version."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:5
msgid "OGR SQL dialect"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:9
msgid ""
"The GDALDataset supports executing commands against a datasource via the "
":cpp:func:`GDALDataset::ExecuteSQL` method.  While in theory any sort of "
"command could be handled this way, in practice the mechanism is used to "
"provide a subset of SQL SELECT capability to applications.  This page "
"discusses the generic SQL implementation implemented within OGR, and "
"issue with driver specific SQL support."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:16
msgid ""
"An alternate \"dialect\", the SQLite dialect, can be used instead of the "
"OGRSQL dialect. Refer to the :ref:`sql_sqlite_dialect` page for more "
"details."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:19
msgid ""
"The OGRLayer class also supports applying an attribute query filter to "
"features returned using the OGRLayer::SetAttributeFilter() method.  The "
"syntax for the attribute filter is the same as the WHERE clause in the "
"OGR SQL SELECT statement.  So everything here with regard to the WHERE "
"clause applies in the context of the SetAttributeFilter() method."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:26
msgid "SELECT"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:28
msgid ""
"The SELECT statement is used to fetch layer features (analogous to table "
"rows in an RDBMS) with the result of the query represented as a temporary"
" layer of features.   The layers of the datasource are analogous to "
"tables in an RDBMS and feature attributes are analogous to column values."
"  The simplest form of OGR SQL SELECT statement looks like this:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:38
msgid ""
"In this case all features are fetched from the layer named \"polylayer\","
" and all attributes of those features are returned.  This is essentially "
"equivalent to accessing the layer directly.  In this example the \"*\" is"
" the list of fields to fetch from the layer, with \"*\" meaning that all "
"fields should be fetched."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:44
msgid ""
"This slightly more sophisticated form still pulls all features from the "
"layer but the schema will only contain the EAS_ID and PROP_VALUE "
"attributes.   Any other attributes would be discarded."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:52
msgid ""
"A much more ambitious SELECT, restricting the features fetched with a "
"WHERE clause, and sorting the results might look like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:59
msgid ""
"This select statement will produce a table with just one feature, with "
"one attribute (named something like \"count_eas_id\") containing the "
"number of distinct values of the eas_id attribute."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:68
msgid "General syntax"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:70
msgid "The general syntax of a SELECT statement is:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:79
msgid "List Operators"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:81
msgid ""
"The field list is a comma separate list of the fields to be carried into "
"the output features from the source layer.  They will appear on output "
"features in the order they appear on in the field list, so the field list"
" may be used to re-order the fields."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:86
msgid ""
"A special form of the field list uses the DISTINCT keyword.  This returns"
" a list of all the distinct values of the named attribute.  When the "
"DISTINCT keyword is used, only one attribute may appear in the field "
"list.  The DISTINCT keyword may be used against any type of field.  "
"Currently the distinctness test against a string value is case "
"insensitive in OGR SQL.  The result of a SELECT with a DISTINCT keyword "
"is a layer with one column (named the same as the field operated on), and"
" one feature per distinct value.  Geometries are discarded.  The distinct"
" values are assembled in memory, so a lot of memory may be used for "
"datasets with a large number of distinct values."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:101
msgid ""
"There are also several summarization operators that may be applied to "
"columns. When a summarization operator is applied to any field, then all "
"fields must have summarization operators applied.   The summarization "
"operators are COUNT (a count of instances), AVG (numerical average), SUM "
"(numerical sum), MIN (lexical or numerical minimum), and MAX (lexical or "
"numerical maximum). This example produces a variety of summarization "
"information on parcel property values:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:114
msgid ""
"It is also possible to apply the COUNT() operator to a DISTINCT SELECT to"
" get a count of distinct values, for instance:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:121
msgid ""
"As a special case, the COUNT() operator can be given a \"*\" argument "
"instead of a field name which is a short form for count all the records."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:129
msgid ""
"Field names can also be prefixed by a table name though this is only "
"really meaningful when performing joins.  It is further demonstrated in "
"the JOIN section."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:133
msgid ""
"Field definitions can also be complex expressions using arithmetic, and "
"functional operators.   However, the DISTINCT keyword, and summarization "
"operators like MIN, MAX, AVG and SUM may not be applied to expression "
"fields. Boolean resulting expressions (comparisons, logical operators) "
"can also be used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:142
msgid "or"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:150
msgid "Functions"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:152
msgid ""
"The SUBSTR function can be used to extract a substring from a string. Its"
" syntax is the following one : SUBSTR(string_expr, start_offset [, "
"length]). It extracts a substring of string_expr, starting at offset "
"start_offset (1 being the first character of string_expr, 2 the second "
"one, etc...). If start_offset is a negative value, the substring is "
"extracted from the end of the string (-1 is the last character of the "
"string, -2 the character before the last character, ...). If length is "
"specified, up to length characters are extracted from the string. "
"Otherwise the remainder of the string is extracted."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:160
msgid ""
"Note: for the time being, the character as considered to be equivalent to"
" bytes, which may not be appropriate for multi-byte encodings like UTF-8."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:169
msgid ""
"The ``hstore_get_value()`` function can be used to extract a value "
"associate to a key from a HSTORE string, formatted like "
"'key=>value,other_key=>other_value,...'"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:177
msgid "Using the field name alias"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:179
msgid ""
"OGR SQL supports renaming the fields following the SQL92 specification by"
" using the AS keyword according to the following example:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:186
msgid ""
"The field name alias can be used as the last operation in the column "
"specification. Therefore we cannot rename the fields inside an operator, "
"but we can rename whole column expression, like these two:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:196
msgid "Changing the type of the fields"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:198
msgid ""
"OGR SQL supports changing the type of the columns by using the SQL92 "
"compliant CAST operator according to the following example:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:205
msgid "Currently casting to the following target types are supported:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:207
msgid "boolean"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:208
msgid "character(field_length). By default, field_length=1."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:209
msgid "float(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:210
msgid "numeric(field_length, field_precision)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:211
msgid "smallint(field_length) : 16 bit signed integer"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:212
msgid "integer(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:213
msgid "bigint(field_length), 64 bit integer, extension to SQL92"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:214
msgid "date(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:215
msgid "time(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:216
msgid "timestamp(field_length)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:217
msgid "geometry, geometry(geometry_type), geometry(geometry_type,epsg_code)"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:219
msgid ""
"Specifying the field_length and/or the field_precision is optional.  An "
"explicit value of zero can be used as the width for character() to "
"indicate variable width.  Conversion to the 'integer list', 'double list'"
" and 'string list' OGR data types are not supported, which doesn't "
"conform to the SQL92 specification."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:225
msgid ""
"While the CAST operator can be applied anywhere in an expression, "
"including in a WHERE clause, the detailed control of output field format "
"is only supported if the CAST operator is the \"outer most\" operators on"
" a field in the field definition list.  In other contexts it is still "
"useful to convert between numeric, string and date data types."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:231
msgid ""
"Casting a WKT string to a geometry is allowed. geometry_type can be "
"POINT[Z], LINESTRING[Z], POLYGON[Z], MULTIPOINT[Z], MULTILINESTRING[Z], "
"MULTIPOLYGON[Z], GEOMETRYCOLLECTION[Z] or GEOMETRY[Z]."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:236
msgid "String literals and identifiers quoting"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:238
msgid ""
"Strict SQL92 rules are applied regarding string literals and identifiers "
"quoting."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:240
msgid ""
"String literals (constants) must be surrounded with single-quote "
"characters. e.g. WHERE a_field = 'a_value'"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:243
msgid ""
"Identifiers (column names and tables names) can be used unquoted if they "
"don't contain special characters or are not a SQL reserved keyword. "
"Otherwise they must be surrounded with double-quote characters. e.g. "
"WHERE \"from\" = 5."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:248
msgid "WHERE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:250
msgid ""
"The argument to the WHERE clause is a logical expression used select "
"records from the source layer.  In addition to its use within the WHERE "
"statement, the WHERE clause handling is also used for OGR attribute "
"queries on regular layers via :cpp:func:`OGRLayer::SetAttributeFilter`."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:255
msgid ""
"In addition to the arithmetic and other functional operators available in"
" expressions in the field selection clause of the SELECT statement, in "
"the WHERE context logical operators are also available and the evaluated "
"value of the expression should be logical (true or false)."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:260
msgid ""
"The available logical operators are ``=``, ``!=``, ``<>``, ``<``, ``>``, "
"``<=``, ``>=``, ``LIKE`` and ``ILIKE``, ``BETWEEN`` and ``IN``. Most of "
"the operators are self explanatory, but it is worth noting that ``!=`` is"
" the same as ``<>``, the string equality is case insensitive, but the "
"``<``, ``>``, ``<=`` and ``>=`` operators *are* case sensitive."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:276
msgid ""
"Starting with GDAL 3.1, LIKE is case sensitive, and ILIKE is case "
"insensitive. In previous versions, LIKE was also case insensitive. If the"
" old behavior is wished in GDAL 3.1, the "
":decl_configoption:`OGR_SQL_LIKE_AS_ILIKE` can be set to ``YES``."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:280
msgid ""
"The value argument to the ``LIKE`` and ``ILIKE`` operators is a pattern "
"against which the value string is matched.  In this pattern percent (%) "
"matches any number of characters, and underscore ( _ ) matches any one "
"character. An optional ESCAPE escape_char clause can be added so that the"
" percent or underscore characters can be searched as regular characters, "
"by being preceded with the escape_char."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:300
msgid ""
"The ``IN`` takes a list of values as its argument and tests the attribute"
" value for membership in the provided set."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:312
msgid ""
"The syntax of the ``BETWEEN`` operator is \"field_name BETWEEN value1 AND"
" value2\" and it is equivalent to \"field_name >= value1 AND field_name "
"<= value2\"."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:315
msgid ""
"In addition to the above binary operators, there are additional operators"
" for testing if a field is null or not. These are the ``IS NULL`` and "
"``IS NOT NULL`` operators."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:319
msgid ""
"Basic field tests can be combined in more complicated predicates using "
"logical operators include ``AND``, ``OR``, and the unary logical ``NOT``."
" Subexpressions should be bracketed to make precedence clear.  Some more "
"complicated predicates are:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:331
msgid "WHERE Limitations"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:333
msgid ""
"Fields must all come from the primary table (the one listed in the FROM "
"clause)."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:335
msgid ""
"All string comparisons are case insensitive except for ``<``, ``>``, "
"``<=`` and ``>=``"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:338
msgid "ORDER BY"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:340
msgid ""
"The ``ORDER BY`` clause is used force the returned features to be "
"reordered into sorted order (ascending or descending) on one of the field"
" values. Ascending (increasing) order is the default if neither the ASC "
"or DESC keyword is provided.  For example:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:352
msgid ""
"Note that ORDER BY clauses cause two passes through the feature set.  One"
" to build an in-memory table of field values corresponded with feature "
"ids, and a second pass to fetch the features by feature id in the sorted "
"order. For formats which cannot efficiently randomly read features by "
"feature id this can be a very expensive operation."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:358
msgid ""
"Sorting of string field values is case sensitive, not case insensitive "
"like in most other parts of OGR SQL."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:362
msgid "LIMIT and OFFSET"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:364
msgid ""
"Starting with GDAL 2.2, the ``LIMIT`` clause can be used to limit the "
"number of features returned. For example"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:371
msgid ""
"The ``OFFSET`` clause can be used to skip the first features of the "
"result set. The value after OFFSET is the number of features skipped. For"
" example, to skip the first 3 features from the result set:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:379
msgid "Both clauses can be combined:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:386
msgid "JOINs"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:388
msgid ""
"OGR SQL supports a limited form of one to one JOIN.  This allows records "
"from a secondary table to be looked up based on a shared key between it "
"and the primary table being queried.  For instance, a table of city "
"locations might include a **nation_id** column that can be used as a "
"reference into a secondary **nation** table to fetch a nation name.  A "
"joined query might look like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:400
msgid ""
"This query would result in a table with all the fields from the city "
"table, and an additional \"nation.name\" field with the nation name "
"pulled from the nation table by looking for the record in the nation "
"table that has the \"id\" field with the same value as the city.nation_id"
" field."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:405
msgid ""
"Joins introduce a number of additional issues.  One is the concept of "
"table qualifiers on field names.  For instance, referring to "
"city.nation_id instead of just nation_id to indicate the nation_id field "
"from the city layer.  The table name qualifiers may only be used in the "
"field list, and within the ``ON`` clause of the join."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:411
msgid ""
"Wildcards are also somewhat more involved.  All fields from the primary "
"table (**city** in this case) and the secondary table (**nation** in this"
" case) may be selected using the usual ``*`` wildcard.  But the fields of"
" just one of the primary or secondary table may be selected by prefixing "
"the asterix with the table name."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:417
msgid ""
"The field names in the resulting query layer will be qualified by the "
"table name, if the table name is given as a qualifier in the field list."
"  In addition field names will be qualified with a table name if they "
"would conflict with earlier fields.  For instance, the following select "
"would result might result in a results set with a **name, nation_id, "
"nation.nation_id** and ** nation.name** field if the city and nation "
"tables both have the **nation_id** and **name** fieldnames."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:429
msgid ""
"On the other hand if the nation table had a **continent_id** field, but "
"the city table did not, then that field would not need to be qualified in"
" the result set.  However, if the selected instead looked like the "
"following statement, all result fields would be qualified by the table "
"name."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:439
msgid ""
"In the above examples, the **nation** table was found in the same "
"datasource as the **city** table.   However, the OGR join support "
"includes the ability to join against a table in a different data source, "
"potentially of a different format.  This is indicated by qualifying the "
"secondary table name with a datasource name.  In this case the secondary "
"datasource is opened using normal OGR semantics and utilized to access "
"the secondary table until the query result is no longer needed."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:452
msgid ""
"While not necessarily very useful, it is also possible to introduce table"
" aliases to simplify some SELECT statements.  This can also be useful to "
"disambiguate situations where tables of the same name are being used from"
" different data sources.  For instance, if the actual tables names were "
"messy we might want to do something like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:464
msgid "It is possible to do multiple joins in a single query."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:472
msgid ""
"The expression after ON is typically of the form "
"\"{primary_table}.{field_name} = {secondary_table}.{field_name}\", and in"
" that order. It is also possible to use a more complex boolean "
"expression, involving multiple comparison operators, but with the "
"restrictions mentioned in the below \"JOIN limitations\" section. In "
"particular, in case of multiple joins (3 tables or more) the fields "
"compared in a JOIN must belong to the primary table (the one after FROM) "
"and the table of the active JOIN."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:482
msgid "JOIN Limitations"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:484
msgid ""
"Joins can be very expensive operations if the secondary table is not "
"indexed on the key field being used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:485
msgid ""
"Joined fields may not be used in WHERE clauses, or ORDER BY clauses at "
"this time.  The join is essentially evaluated after all primary table "
"subsetting is complete, and after the ORDER BY pass."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:486
msgid ""
"Joined fields may not be used as keys in later joins.  So you could not "
"use the province id in a city to lookup the province record, and then use"
" a nation id from the province id to lookup the nation record.  This is a"
" sensible thing to want and could be implemented, but is not currently "
"supported."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:487
msgid ""
"Datasource names for joined tables are evaluated relative to the current "
"processes working directory, not the path to the primary datasource."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:488
msgid ""
"These are not true LEFT or RIGHT joins in the RDBMS sense.  Whether or "
"not a secondary record exists for the join key or not, one and only one "
"copy of the primary record is returned in the result set.  If a secondary"
" record cannot be found, the secondary derived fields will be NULL.  If "
"more than one matching secondary field is found only the first will be "
"used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:491
msgid "UNION ALL"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:493
msgid ""
"The SQL engine can deal with several SELECT combined with UNION ALL. The "
"effect of UNION ALL is to concatenate the rows returned by the right "
"SELECT statement to the rows returned by the left SELECT statement."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:504
msgid "UNION ALL restrictions"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:506
msgid ""
"The processing of UNION ALL in OGR differs from the SQL standard, in "
"which it accepts that the columns from the various SELECT are not "
"identical. In that case, it will return a super-set of all the fields "
"from each SELECT statement."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:510
msgid ""
"There is also a restriction : ORDER BY can only be specified for each "
"SELECT, and not at the level of the result of the union."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:514
msgid "SPECIAL FIELDS"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:516
msgid ""
"The OGR SQL query processor treats some of the attributes of the features"
" as built-in special fields can be used in the SQL statements likewise "
"the other fields. These fields can be placed in the select list, the "
"WHERE clause and the ORDER BY clause respectively. The special field will"
" not be included in the result by default but it may be explicitly "
"included by adding it to the select list. When accessing the field values"
" the special fields will take precedence over the other fields with the "
"same names in the data source."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:526
msgid "FID"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:528
msgid ""
"Normally the feature id is a special property of a feature and not "
"treated as an attribute of the feature.  In some cases it is convenient "
"to be able to utilize the feature id in queries and result sets as a "
"regular field.  To do so use the name ``FID``.  The field wildcard "
"expansions will not include the feature id, but it may be explicitly "
"included using a syntax like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:539
msgid "OGR_GEOMETRY"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:541
msgid ""
"Some of the data sources (like MapInfo tab) can handle geometries of "
"different types within the same layer. The ``OGR_GEOMETRY`` special field"
" represents the geometry type returned by OGRGeometry::getGeometryName() "
"and can be used to distinguish the various types. By using this field one"
" can select particular types of the geometries like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:552
msgid "OGR_GEOM_WKT"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:554
msgid ""
"The Well Known Text representation of the geometry can also be used as a "
"special field. To select the WKT of the geometry ``OGR_GEOM_WKT`` might "
"be included in the select list, like:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:562
msgid ""
"Using the ``OGR_GEOM_WKT`` and the ``LIKE`` operator in the WHERE clause "
"we can get similar effect as using OGR_GEOMETRY:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:571
msgid "OGR_GEOM_AREA"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:573
msgid ""
"The ``OGR_GEOM_AREA`` special field returns the area of the feature's "
"geometry computed by the OGRSurface::get_Area() method. For "
"OGRGeometryCollection and OGRMultiPolygon the value is the sum of the "
"areas of its members. For non-surface geometries the returned area is "
"0.0."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:578
msgid "For example, to select only polygon features larger than a given area:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:585
msgid "OGR_STYLE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:587
#: ../../source/user/sql_sqlite_dialect.rst:140
msgid ""
"The ``OGR_STYLE`` special field represents the style string of the "
"feature returned by OGRFeature::GetStyleString(). By using this field and"
" the ``LIKE`` operator the result of the query can be filtered by the "
"style. For example we can select the annotation features as:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:597
msgid "CREATE INDEX"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:599
msgid ""
"Some OGR SQL drivers support creating of attribute indexes.  Currently "
"this includes the Shapefile driver.  An index accelerates very simple "
"attribute queries of the form **fieldname = value**, which is what is "
"used by the ``JOIN`` capability.  To create an attribute index on the "
"nation_id field of the nation table a command like this would be used:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:610
msgid "Index Limitations"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:612
msgid ""
"Indexes are not maintained dynamically when new features are added to or "
"removed from a layer."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:613
msgid ""
"Very long strings (longer than 256 characters?) cannot currently be "
"indexed."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:614
msgid ""
"To recreate an index it is necessary to drop all indexes on a layer and "
"then recreate all the indexes."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:615
msgid ""
"Indexes are not used in any complex queries.   Currently the only query "
"the will accelerate is a simple \"field = value\" query."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:618
msgid "DROP INDEX"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:620
msgid ""
"The OGR SQL DROP INDEX command can be used to drop all indexes on a "
"particular table, or just the index for a particular column."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:629
msgid "ALTER TABLE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:631
msgid "The following OGR SQL ALTER TABLE commands can be used."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:633
msgid ""
"-\"ALTER TABLE tablename ADD [COLUMN] columnname columntype\" to add a "
"new field. Supported if the layer declares the OLCCreateField capability."
" -\"ALTER TABLE tablename RENAME [COLUMN] oldcolumnname TO "
"newcolumnname\" to rename an existing field. Supported if the layer "
"declares the OLCAlterFieldDefn capability. -\"ALTER TABLE tablename ALTER"
" [COLUMN] columnname TYPE columntype\" to change the type of an existing "
"field. Supported if the layer declares the OLCAlterFieldDefn capability. "
"-\"ALTER TABLE tablename DROP [COLUMN] columnname\" to delete an existing"
" field. Supported if the layer declares the OLCDeleteField capability."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:638
msgid ""
"The columntype value follows the syntax of the types supported by the "
"CAST operator described above."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:648
msgid "DROP TABLE"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:650
msgid ""
"The OGR SQL DROP TABLE command can be used to delete a table. This is "
"only supported on datasources that declare the ODsCDeleteLayer "
"capability."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:658
msgid "ExecuteSQL()"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:660
msgid ""
"SQL is executed against an GDALDataset, not against a specific layer.  "
"The call looks like this:"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:669
msgid ""
"The ``pszDialect`` argument is in theory intended to allow for support of"
" different command languages against a provider, but for now applications"
" should always pass an empty (not NULL) string to get the default "
"dialect."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:673
msgid ""
"The ``poSpatialFilter`` argument is a geometry used to select a bounding "
"rectangle for features to be returned in a manner similar to the "
":cpp:func:`OGRLayer::SetSpatialFilter` method.  It may be NULL for no "
"special spatial restriction."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:678
msgid ""
"The result of an ExecuteSQL() call is usually a temporary OGRLayer "
"representing the results set from the statement.  This is the case for a "
"SELECT statement for instance.  The returned temporary layer should be "
"released with :cpp:func:`GDALDataset::ReleaseResultsSet` method when no "
"longer needed.  Failure to release it before the datasource is destroyed "
"may result in a crash."
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:685
msgid "Non-OGR SQL"
msgstr ""

#: ../../source/user/ogr_sql_dialect.rst:687
msgid ""
"All OGR drivers for database systems: :ref:`vector.mysql`, "
":ref:`vector.pg`, :ref:`vector.oci`, :ref:`vector.sqlite`, "
":ref:`vector.odbc`, :ref:`vector.pgeo`, and :ref:`vector.mssqlspatial`, "
"override the :cpp:func:`GDALDataset::ExecuteSQL` function with dedicated "
"implementation and, by default, pass the SQL statements directly to the "
"underlying RDBMS. In these cases the SQL syntax varies in some "
"particulars from OGR SQL. Also, anything possible in SQL can then be "
"accomplished for these particular databases.  Only the result of SQL "
"WHERE statements will be returned as layers."
msgstr ""

#: ../../source/user/ogr_sql_sqlite_dialect.rst:5
msgid "OGR SQL dialect and SQLITE SQL dialect"
msgstr ""

#: ../../source/user/raster_data_model.rst:5
msgid "Raster Data Model"
msgstr ""

#: ../../source/user/raster_data_model.rst:7
msgid ""
"This document attempts to describe the GDAL data model. That is the types"
" of information that a GDAL data store can contain, and their semantics."
msgstr ""

#: ../../source/user/raster_data_model.rst:10
#: ../../source/user/vector_data_model.rst:86
msgid "Dataset"
msgstr ""

#: ../../source/user/raster_data_model.rst:12
msgid ""
"A dataset (represented by the :cpp:class:`GDALDataset` class) is an "
"assembly of related raster bands and some information common to them all."
" In particular the dataset has a concept of the raster size (in pixels "
"and lines) that applies to all the bands. The dataset is also responsible"
" for the georeferencing transform and coordinate system definition of all"
" bands. The dataset itself can also have associated metadata, a list of "
"name/value pairs in string form."
msgstr ""

#: ../../source/user/raster_data_model.rst:14
msgid ""
"Note that the GDAL dataset, and raster band data model is loosely based "
"on the OpenGIS Grid Coverages specification."
msgstr ""

#: ../../source/user/raster_data_model.rst:17
msgid "Coordinate System"
msgstr ""

#: ../../source/user/raster_data_model.rst:18
msgid ""
"Dataset coordinate systems are represented as OpenGIS Well Known Text "
"strings. This can contain:"
msgstr ""

#: ../../source/user/raster_data_model.rst:20
msgid "An overall coordinate system name."
msgstr ""

#: ../../source/user/raster_data_model.rst:21
msgid "A geographic coordinate system name."
msgstr ""

#: ../../source/user/raster_data_model.rst:22
msgid "A datum identifier."
msgstr ""

#: ../../source/user/raster_data_model.rst:23
msgid "An ellipsoid name, semi-major axis, and inverse flattening."
msgstr ""

#: ../../source/user/raster_data_model.rst:24
msgid "A prime meridian name and offset from Greenwich."
msgstr ""

#: ../../source/user/raster_data_model.rst:25
msgid "A projection method type (i.e. Transverse Mercator)."
msgstr ""

#: ../../source/user/raster_data_model.rst:26
msgid "A list of projection parameters (i.e. central_meridian)."
msgstr ""

#: ../../source/user/raster_data_model.rst:27
msgid "A units name, and conversion factor to meters or radians."
msgstr ""

#: ../../source/user/raster_data_model.rst:28
msgid "Names and ordering for the axes."
msgstr ""

#: ../../source/user/raster_data_model.rst:29
msgid ""
"Codes for most of the above in terms of predefined coordinate systems "
"from authorities such as EPSG."
msgstr ""

#: ../../source/user/raster_data_model.rst:31
msgid ""
"For more information on OpenGIS WKT coordinate system definitions, and "
"mechanisms to manipulate them, refer to the osr_tutorial document and/or "
"the OGRSpatialReference class documentation."
msgstr ""

#: ../../source/user/raster_data_model.rst:33
msgid ""
"The coordinate system returned by "
":cpp:func:`GDALDataset::GetProjectionRef` describes the georeferenced "
"coordinates implied by the affine georeferencing transform returned by "
":cpp:func:`GDALDataset::GetGeoTransform`. The coordinate system returned "
"by :cpp:func:`GDALDataset::GetGCPProjection` describes the georeferenced "
"coordinates of the GCPs returned by :cpp:func:`GDALDataset::GetGCPs`."
msgstr ""

#: ../../source/user/raster_data_model.rst:35
msgid ""
"Note that a returned coordinate system strings of \"\" indicates nothing "
"is known about the georeferencing coordinate system."
msgstr ""

#: ../../source/user/raster_data_model.rst:38
msgid "Affine GeoTransform"
msgstr ""

#: ../../source/user/raster_data_model.rst:40
msgid ""
"GDAL datasets have two ways of describing the relationship between raster"
" positions (in pixel/line coordinates) and georeferenced coordinates. The"
" first, and most commonly used is the affine transform (the other is "
"GCPs)."
msgstr ""

#: ../../source/user/raster_data_model.rst:42
msgid ""
"The affine transform consists of six coefficients returned by "
":cpp:func:`GDALDataset::GetGeoTransform` which map pixel/line coordinates"
" into georeferenced space using the following relationship:"
msgstr ""

#: ../../source/user/raster_data_model.rst:49
msgid ""
"In case of north up images, the GT(2) and GT(4) coefficients are zero, "
"and the GT(1) is pixel width, and GT(5) is pixel height. The "
"(GT(0),GT(3)) position is the top left corner of the top left pixel of "
"the raster."
msgstr ""

#: ../../source/user/raster_data_model.rst:51
msgid ""
"Note that the pixel/line coordinates in the above are from (0.0,0.0) at "
"the top left corner of the top left pixel to "
"(width_in_pixels,height_in_pixels) at the bottom right corner of the "
"bottom right pixel. The pixel/line location of the center of the top left"
" pixel would therefore be (0.5,0.5)."
msgstr ""

#: ../../source/user/raster_data_model.rst:54
msgid "GCPs"
msgstr ""

#: ../../source/user/raster_data_model.rst:56
msgid ""
"A dataset can have a set of control points relating one or more positions"
" on the raster to georeferenced coordinates. All GCPs share a "
"georeferencing coordinate system (returned by "
":cpp:func:`GDALDataset::GetGCPProjection`). Each GCP (represented as the "
"GDAL_GCP class) contains the following:"
msgstr ""

#: ../../source/user/raster_data_model.rst:71
msgid ""
"The pszId string is intended to be a unique (and often, but not always "
"numerical) identifier for the GCP within the set of GCPs on this dataset."
" The pszInfo is usually an empty string, but can contain any user defined"
" text associated with the GCP. Potentially this can also contain machine "
"parsable information on GCP status though that isn't done at this time."
msgstr ""

#: ../../source/user/raster_data_model.rst:73
msgid ""
"The (Pixel,Line) position is the GCP location on the raster. The (X,Y,Z) "
"position is the associated georeferenced location with the Z often being "
"zero."
msgstr ""

#: ../../source/user/raster_data_model.rst:75
msgid ""
"The GDAL data model does not imply a transformation mechanism that must "
"be generated from the GCPs ... this is left to the application. However "
"1st to 5th order polynomials are common."
msgstr ""

#: ../../source/user/raster_data_model.rst:77
msgid ""
"Normally a dataset will contain either an affine geotransform, GCPs or "
"neither. It is uncommon to have both, and it is undefined which is "
"authoritative."
msgstr ""

#: ../../source/user/raster_data_model.rst:80
msgid "Metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:82
msgid ""
"GDAL metadata is auxiliary format and application specific textual data "
"kept as a list of name/value pairs. The names are required to be well "
"behaved tokens (no spaces, or odd characters). The values can be of any "
"length, and contain anything except an embedded null (ASCII zero)."
msgstr ""

#: ../../source/user/raster_data_model.rst:84
msgid ""
"The metadata handling system is not well tuned to handling very large "
"bodies of metadata. Handling of more than 100K of metadata for a dataset "
"is likely to lead to performance degradation."
msgstr ""

#: ../../source/user/raster_data_model.rst:86
msgid ""
"Some formats will support generic (user defined) metadata, while other "
"format drivers will map specific format fields to metadata names. For "
"instance the TIFF driver returns a few information tags as metadata "
"including the date/time field which is returned as:"
msgstr ""

#: ../../source/user/raster_data_model.rst:92
msgid ""
"Metadata is split into named groups called domains, with the default "
"domain having no name (NULL or \"\"). Some specific domains exist for "
"special purposes. Note that currently there is no way to enumerate all "
"the domains available for a given object, but applications can \"test\" "
"for any domains they know how to interpret."
msgstr ""

#: ../../source/user/raster_data_model.rst:94
msgid ""
"The following metadata items have well defined semantics in the default "
"domain:"
msgstr ""

#: ../../source/user/raster_data_model.rst:96
msgid ""
"AREA_OR_POINT: May be either \"Area\" (the default) or \"Point\". "
"Indicates whether a pixel value should be assumed to represent a sampling"
" over the region of the pixel or a point sample at the center of the "
"pixel. This is not intended to influence interpretation of georeferencing"
" which remains area oriented."
msgstr ""

#: ../../source/user/raster_data_model.rst:97
msgid ""
"NODATA_VALUES: The value is a list of space separated pixel values "
"matching the number of bands in the dataset that can be collectively used"
" to identify pixels that are nodata in the dataset. With this style of "
"nodata a pixel is considered nodata in all bands if and only if all bands"
" match the corresponding value in the NODATA_VALUES tuple. This metadata "
"is not widely honoured by GDAL drivers, algorithms or utilities at this "
"time."
msgstr ""

#: ../../source/user/raster_data_model.rst:98
msgid ""
"MATRIX_REPRESENTATION: This value, used for Polarimetric SAR datasets, "
"contains the matrix representation that this data is provided in. The "
"following are acceptable values:"
msgstr ""

#: ../../source/user/raster_data_model.rst:100
msgid "SCATTERING"
msgstr ""

#: ../../source/user/raster_data_model.rst:101
msgid "SYMMETRIZED_SCATTERING"
msgstr ""

#: ../../source/user/raster_data_model.rst:102
msgid "COVARIANCE"
msgstr ""

#: ../../source/user/raster_data_model.rst:103
msgid "SYMMETRIZED_COVARIANCE"
msgstr ""

#: ../../source/user/raster_data_model.rst:104
msgid "COHERENCY"
msgstr ""

#: ../../source/user/raster_data_model.rst:105
msgid "SYMMETRIZED_COHERENCY"
msgstr ""

#: ../../source/user/raster_data_model.rst:106
msgid "KENNAUGH"
msgstr ""

#: ../../source/user/raster_data_model.rst:107
msgid "SYMMETRIZED_KENNAUGH"
msgstr ""

#: ../../source/user/raster_data_model.rst:108
msgid ""
"POLARIMETRIC_INTERP: This metadata item is defined for Raster Bands for "
"polarimetric SAR data. This indicates which entry in the specified matrix"
" representation of the data this band represents. For a dataset provided "
"as a scattering matrix, for example, acceptable values for this metadata "
"item are HH, HV, VH, VV. When the dataset is a covariance matrix, for "
"example, this metadata item will be one of Covariance_11, Covariance_22, "
"Covariance_33, Covariance_12, Covariance_13, Covariance_23 (since the "
"matrix itself is a hermitian matrix, that is all the data that is "
"required to describe the matrix)."
msgstr ""

#: ../../source/user/raster_data_model.rst:109
msgid ""
"METADATATYPE: If IMAGERY Domain present, the item consist the reader "
"which processed the metadata. Now present such readers:"
msgstr ""

#: ../../source/user/raster_data_model.rst:111
msgid "DG: DigitalGlobe imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:112
msgid "GE: GeoEye (or formally SpaceImaging) imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:113
msgid "OV: OrbView imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:114
msgid "DIMAP: Pleiades imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:115
msgid "MSP: Resurs DK-1 imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:116
msgid "ODL: Landsat imagery metadata"
msgstr ""

#: ../../source/user/raster_data_model.rst:117
msgid ""
"CACHE_PATH: A cache directory path. Now this metadata item sets only by "
"WMS driver. This is useful when dataset deletes with cached data or when "
"external program need to put tiles in cache for some area of interest."
msgstr ""

#: ../../source/user/raster_data_model.rst:120
msgid "SUBDATASETS Domain"
msgstr ""

#: ../../source/user/raster_data_model.rst:122
msgid ""
"The SUBDATASETS domain holds a list of child datasets. Normally this is "
"used to provide pointers to a list of images stored within a single multi"
" image file."
msgstr ""

#: ../../source/user/raster_data_model.rst:124
msgid ""
"For example, an NITF with two images might have the following subdataset "
"list."
msgstr ""

#: ../../source/user/raster_data_model.rst:133
msgid ""
"The value of the _NAME is the string that can be passed to "
":cpp:func:`GDALOpen` to access the file. The _DESC value is intended to "
"be a more user friendly string that can be displayed to the user in a "
"selector."
msgstr ""

#: ../../source/user/raster_data_model.rst:135
msgid ""
"Drivers which support subdatasets advertise the ``DMD_SUBDATASETS`` "
"capability. This information is reported when the --format and --formats "
"options are passed to the command line utilities."
msgstr ""

#: ../../source/user/raster_data_model.rst:137
msgid ""
"Currently, drivers which support subdatasets are: ADRG, ECRGTOC, "
"GEORASTER, GTiff, HDF4, HDF5, netCDF, NITF, NTv2, OGDI, PDF, "
"PostGISRaster, Rasterlite, RPFTOC, RS2, TileDB, WCS, and WMS."
msgstr ""

#: ../../source/user/raster_data_model.rst:140
msgid "IMAGE_STRUCTURE Domain"
msgstr ""

#: ../../source/user/raster_data_model.rst:142
msgid ""
"Metadata in the default domain is intended to be related to the image, "
"and not particularly related to the way the image is stored on disk. That"
" is, it is suitable for copying with the dataset when it is copied to a "
"new format. Some information of interest is closely tied to a particular "
"file format and storage mechanism. In order to prevent this getting "
"copied along with datasets it is placed in a special domain called "
"IMAGE_STRUCTURE that should not normally be copied to new formats."
msgstr ""

#: ../../source/user/raster_data_model.rst:144
msgid ""
"Currently the following items are defined by :ref:`rfc-14` as having "
"specific semantics in the IMAGE_STRUCTURE domain."
msgstr ""

#: ../../source/user/raster_data_model.rst:146
msgid ""
"COMPRESSION: The compression type used for this dataset or band. There is"
" no fixed catalog of compression type names, but where a given format "
"includes a COMPRESSION creation option, the same list of values should be"
" used here as there."
msgstr ""

#: ../../source/user/raster_data_model.rst:147
msgid ""
"NBITS: The actual number of bits used for this band, or the bands of this"
" dataset. Normally only present when the number of bits is non-standard "
"for the datatype, such as when a 1 bit TIFF is represented through GDAL "
"as GDT_Byte."
msgstr ""

#: ../../source/user/raster_data_model.rst:148
msgid ""
"INTERLEAVE: This only applies on datasets, and the value should be one of"
" PIXEL, LINE or BAND. It can be used as a data access hint."
msgstr ""

#: ../../source/user/raster_data_model.rst:149
msgid ""
"PIXELTYPE: This may appear on a GDT_Byte band (or the corresponding "
"dataset) and have the value SIGNEDBYTE to indicate the unsigned byte "
"values between 128 and 255 should be interpreted as being values between "
"-128 and -1 for applications that recognise the SIGNEDBYTE type."
msgstr ""

#: ../../source/user/raster_data_model.rst:152
msgid "RPC Domain"
msgstr ""

#: ../../source/user/raster_data_model.rst:154
msgid ""
"The RPC metadata domain holds metadata describing the Rational Polynomial"
" Coefficient geometry model for the image if present. This geometry model"
" can be used to transform between pixel/line and georeferenced locations."
" The items defining the model are:"
msgstr ""

#: ../../source/user/raster_data_model.rst:156
msgid ""
"ERR_BIAS: Error - Bias. The RMS bias error in meters per horizontal axis "
"of all points in the image (-1.0 if unknown)"
msgstr ""

#: ../../source/user/raster_data_model.rst:157
msgid ""
"ERR_RAND: Error - Random. RMS random error in meters per horizontal axis "
"of each point in the image (-1.0 if unknown)"
msgstr ""

#: ../../source/user/raster_data_model.rst:158
msgid "LINE_OFF: Line Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:159
msgid "SAMP_OFF: Sample Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:160
msgid "LAT_OFF: Geodetic Latitude Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:161
msgid "LONG_OFF: Geodetic Longitude Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:162
msgid "HEIGHT_OFF: Geodetic Height Offset"
msgstr ""

#: ../../source/user/raster_data_model.rst:163
msgid "LINE_SCALE: Line Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:164
msgid "SAMP_SCALE: Sample Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:165
msgid "LAT_SCALE: Geodetic Latitude Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:166
msgid "LONG_SCALE: Geodetic Longitude Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:167
msgid "HEIGHT_SCALE: Geodetic Height Scale"
msgstr ""

#: ../../source/user/raster_data_model.rst:168
msgid ""
"LINE_NUM_COEFF (1-20): Line Numerator Coefficients. Twenty coefficients "
"for the polynomial in the Numerator of the rn equation. (space separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:169
msgid ""
"LINE_DEN_COEFF (1-20): Line Denominator Coefficients. Twenty coefficients"
" for the polynomial in the Denominator of the rn equation. (space "
"separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:170
msgid ""
"SAMP_NUM_COEFF (1-20): Sample Numerator Coefficients. Twenty coefficients"
" for the polynomial in the Numerator of the cn equation. (space "
"separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:171
msgid ""
"SAMP_DEN_COEFF (1-20): Sample Denominator Coefficients. Twenty "
"coefficients for the polynomial in the Denominator of the cn equation. "
"(space separated)"
msgstr ""

#: ../../source/user/raster_data_model.rst:173
msgid ""
"These fields are directly derived from the document prospective GeoTIFF "
"RPC document (http://geotiff.maptools.org/rpc_prop.html) which in turn is"
" closely modeled on the NITF RPC00B definition."
msgstr ""

#: ../../source/user/raster_data_model.rst:175
msgid ""
"The line and pixel offset expressed with LINE_OFF and SAMP_OFF are with "
"respect to the center of the pixel."
msgstr ""

#: ../../source/user/raster_data_model.rst:178
msgid "IMAGERY Domain (remote sensing)"
msgstr ""

#: ../../source/user/raster_data_model.rst:180
msgid ""
"For satellite or aerial imagery the IMAGERY Domain may be present. It "
"depends on the existence of special metadata files near the image file. "
"The files at the same directory with image file tested by the set of "
"metadata readers, if files can be processed by the metadata reader, it "
"fill the IMAGERY Domain with the following items:"
msgstr ""

#: ../../source/user/raster_data_model.rst:182
msgid "SATELLITEID: A satellite or scanner name"
msgstr ""

#: ../../source/user/raster_data_model.rst:183
msgid ""
"CLOUDCOVER: Cloud coverage. The value between 0 - 100 or 999 if not "
"available"
msgstr ""

#: ../../source/user/raster_data_model.rst:184
msgid "ACQUISITIONDATETIME: The image acquisition date time in UTC"
msgstr ""

#: ../../source/user/raster_data_model.rst:187
msgid "xml: Domains"
msgstr ""

#: ../../source/user/raster_data_model.rst:189
msgid ""
"Any domain name prefixed with \"xml:\" is not normal name/value metadata."
" It is a single XML document stored in one big string."
msgstr ""

#: ../../source/user/raster_data_model.rst:192
msgid "Raster Band"
msgstr ""

#: ../../source/user/raster_data_model.rst:194
msgid ""
"A raster band is represented in GDAL with the :cpp:class:`GDALRasterBand`"
" class. It represents a single raster band/channel/layer. It does not "
"necessarily represent a whole image. For instance, a 24bit RGB image "
"would normally be represented as a dataset with three bands, one for red,"
" one for green and one for blue."
msgstr ""

#: ../../source/user/raster_data_model.rst:196
msgid "A raster band has the following properties:"
msgstr ""

#: ../../source/user/raster_data_model.rst:198
msgid ""
"A width and height in pixels and lines. This is the same as that defined "
"for the dataset, if this is a full resolution band."
msgstr ""

#: ../../source/user/raster_data_model.rst:199
msgid ""
"A datatype (GDALDataType). One of Byte, UInt16, Int16, UInt32, Int32, "
"Float32, Float64, and the complex types CInt16, CInt32, CFloat32, and "
"CFloat64."
msgstr ""

#: ../../source/user/raster_data_model.rst:200
msgid ""
"A block size. This is a preferred (efficient) access chunk size. For "
"tiled images this will be one tile. For scanline oriented images this "
"will normally be one scanline."
msgstr ""

#: ../../source/user/raster_data_model.rst:201
msgid ""
"A list of name/value pair metadata in the same format as the dataset, but"
" of information that is potentially specific to this band."
msgstr ""

#: ../../source/user/raster_data_model.rst:202
msgid "An optional description string."
msgstr ""

#: ../../source/user/raster_data_model.rst:203
msgid ""
"An optional single nodata pixel value (see also NODATA_VALUES metadata on"
" the dataset for multi-band style nodata values)."
msgstr ""

#: ../../source/user/raster_data_model.rst:204
msgid ""
"An optional nodata mask band marking pixels as nodata or in some cases "
"transparency as discussed in RFC 15: Band Masks and documented in "
"GDALRasterBand::GetMaskBand()."
msgstr ""

#: ../../source/user/raster_data_model.rst:205
msgid ""
"An optional list of category names (effectively class names in a thematic"
" image)."
msgstr ""

#: ../../source/user/raster_data_model.rst:206
msgid "An optional minimum and maximum value."
msgstr ""

#: ../../source/user/raster_data_model.rst:207
msgid "Optional statistics stored in metadata:"
msgstr ""

#: ../../source/user/raster_data_model.rst:209
msgid "STATISTICS_MEAN: mean"
msgstr ""

#: ../../source/user/raster_data_model.rst:210
msgid "STATISTICS_MINIMUM: minimum"
msgstr ""

#: ../../source/user/raster_data_model.rst:211
msgid "STATISTICS_MAXIMUM: maximum"
msgstr ""

#: ../../source/user/raster_data_model.rst:212
msgid "STATISTICS_STDDEV: standard deviation"
msgstr ""

#: ../../source/user/raster_data_model.rst:213
msgid ""
"STATISTICS_APPROXIMATE: only present if GDAL has computed approximate "
"statistics"
msgstr ""

#: ../../source/user/raster_data_model.rst:214
msgid "STATISTICS_VALID_PERCENT: percentage of valid (not nodata) pixel"
msgstr ""

#: ../../source/user/raster_data_model.rst:216
msgid ""
"An optional offset and scale for transforming raster values into meaning "
"full values (i.e. translate height to meters)."
msgstr ""

#: ../../source/user/raster_data_model.rst:217
msgid ""
"An optional raster unit name. For instance, this might indicate linear "
"units for elevation data."
msgstr ""

#: ../../source/user/raster_data_model.rst:218
msgid "A color interpretation for the band. This is one of:"
msgstr ""

#: ../../source/user/raster_data_model.rst:220
msgid "GCI_Undefined: the default, nothing is known."
msgstr ""

#: ../../source/user/raster_data_model.rst:221
msgid "GCI_GrayIndex: this is an independent gray-scale image"
msgstr ""

#: ../../source/user/raster_data_model.rst:222
msgid "GCI_PaletteIndex: this raster acts as an index into a color table"
msgstr ""

#: ../../source/user/raster_data_model.rst:223
msgid "GCI_RedBand: this raster is the red portion of an RGB or RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:224
msgid "GCI_GreenBand: this raster is the green portion of an RGB or RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:225
msgid "GCI_BlueBand: this raster is the blue portion of an RGB or RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:226
msgid "GCI_AlphaBand: this raster is the alpha portion of an RGBA image"
msgstr ""

#: ../../source/user/raster_data_model.rst:227
msgid "GCI_HueBand: this raster is the hue of an HLS image"
msgstr ""

#: ../../source/user/raster_data_model.rst:228
msgid "GCI_SaturationBand: this raster is the saturation of an HLS image"
msgstr ""

#: ../../source/user/raster_data_model.rst:229
msgid "GCI_LightnessBand: this raster is the hue of an HLS image"
msgstr ""

#: ../../source/user/raster_data_model.rst:230
msgid "GCI_CyanBand: this band is the cyan portion of a CMY or CMYK image"
msgstr ""

#: ../../source/user/raster_data_model.rst:231
msgid "GCI_MagentaBand: this band is the magenta portion of a CMY or CMYK image"
msgstr ""

#: ../../source/user/raster_data_model.rst:232
msgid "GCI_YellowBand: this band is the yellow portion of a CMY or CMYK image"
msgstr ""

#: ../../source/user/raster_data_model.rst:233
msgid "GCI_BlackBand: this band is the black portion of a CMYK image."
msgstr ""

#: ../../source/user/raster_data_model.rst:235
msgid "A color table, described in more detail later."
msgstr ""

#: ../../source/user/raster_data_model.rst:236
msgid "Knowledge of reduced resolution overviews (pyramids) if available."
msgstr ""

#: ../../source/user/raster_data_model.rst:239
msgid "Color Table"
msgstr ""

#: ../../source/user/raster_data_model.rst:241
msgid ""
"A color table consists of zero or more color entries described in C by "
"the following structure:"
msgstr ""

#: ../../source/user/raster_data_model.rst:260
msgid ""
"The color table also has a palette interpretation value "
"(GDALPaletteInterp) which is one of the following values, and indicates "
"how the c1/c2/c3/c4 values of a color entry should be interpreted."
msgstr ""

#: ../../source/user/raster_data_model.rst:262
msgid "GPI_Gray: Use c1 as gray scale value."
msgstr ""

#: ../../source/user/raster_data_model.rst:263
msgid "GPI_RGB: Use c1 as red, c2 as green, c3 as blue and c4 as alpha."
msgstr ""

#: ../../source/user/raster_data_model.rst:264
msgid "GPI_CMYK: Use c1 as cyan, c2 as magenta, c3 as yellow and c4 as black."
msgstr ""

#: ../../source/user/raster_data_model.rst:265
msgid "GPI_HLS: Use c1 as hue, c2 as lightness, and c3 as saturation."
msgstr ""

#: ../../source/user/raster_data_model.rst:267
msgid ""
"To associate a color with a raster pixel, the pixel value is used as a "
"subscript into the color table. That means that the colors are always "
"applied starting at zero and ascending. There is no provision for "
"indicating a pre-scaling mechanism before looking up in the color table."
msgstr ""

#: ../../source/user/raster_data_model.rst:270
msgid "Overviews"
msgstr ""

#: ../../source/user/raster_data_model.rst:272
msgid ""
"A band may have zero or more overviews. Each overview is represented as a"
" \"free standing\" :cpp:class:`GDALRasterBand`. The size (in pixels and "
"lines) of the overview will be different than the underlying raster, but "
"the geographic region covered by overviews is the same as the full "
"resolution band."
msgstr ""

#: ../../source/user/raster_data_model.rst:274
msgid ""
"The overviews are used to display reduced resolution overviews more "
"quickly than could be done by reading all the full resolution data and "
"downsampling."
msgstr ""

#: ../../source/user/raster_data_model.rst:276
msgid ""
"Bands also have a HasArbitraryOverviews property which is TRUE if the "
"raster can be read at any resolution efficiently but with no distinct "
"overview levels. This applies to some FFT encoded images, or images "
"pulled through gateways where downsampling can be done efficiently at the"
" remote point."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:5
msgid "SQL SQLite dialect"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:9
msgid ""
"The SQLite \"dialect\" can be used as an alternate SQL dialect to the "
":ref:`ogr_sql_dialect`. This assumes that GDAL/OGR is built with support "
"for SQLite, and preferably with `Spatialite <http://www.gaia-"
"gis.it/spatialite/>`_ support too to benefit from spatial functions."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:14
msgid ""
"The SQLite dialect may be used with any OGR datasource, like the OGR SQL "
"dialect. It is available through the GDALDataset::ExecuteSQL() method by "
"specifying the pszDialect to \"SQLITE\". For the :ref:`ogrinfo` or "
":ref:`ogr2ogr` utility, you must specify the \"-dialect SQLITE\" option."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:19
msgid ""
"This is mainly aimed to execute SELECT statements, but, for datasources "
"that support update, INSERT/UPDATE/DELETE statements can also be run. "
"GDAL is internally using `the Virtual Table Mechanism of SQLite "
"<https://sqlite.org/vtab.html>`_ and therefore operations like ALTER "
"TABLE are not supported."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:24
msgid ""
"If the datasource is SQLite database (GeoPackage, SpatiaLite) then SQLite"
" dialect acts as native SQL dialect and Virtual Table Mechanism is not "
"used. It is possible to force GDAL to use Virtual Tables even in this "
"case by specifying \"-dialect INDIRECT_SQLITE\". This should be used only"
" when necessary, since going through the virtual table mechanism might "
"affect performance."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:29
msgid ""
"The syntax of the SQL statements is fully the one of the SQLite SQL "
"engine. You can refer to the following pages:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:32
msgid "`SELECT <http://www.sqlite.org/lang_select.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:33
msgid "`INSERT <http://www.sqlite.org/lang_insert.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:34
msgid "`UPDATE <http://www.sqlite.org/lang_update.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:35
msgid "`DELETE <http://www.sqlite.org/lang_delete.html>`_"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:38
msgid "SELECT statement"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:40
msgid ""
"The SELECT statement is used to fetch layer features (analogous to table "
"rows in an RDBMS) with the result of the query represented as a temporary"
" layer of features.   The layers of the datasource are analogous to "
"tables in an RDBMS and feature attributes are analogous to column values."
"  The simplest form of OGR SQLITE SELECT statement looks like this:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:50
msgid ""
"More complex statements can of course be used, including WHERE, JOIN, "
"USING, GROUP BY, ORDER BY, sub SELECT, ..."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:53
msgid ""
"The table names that can be used are the layer names available in the "
"datasource on which the ExecuteSQL() method is called."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:56
msgid ""
"Similarly to OGRSQL, it is also possible to refer to layers of other "
"datasources with the following syntax : "
"\"other_datasource_name\".\"layer_name\"."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:63
msgid ""
"If the master datasource is SQLite database (GeoPackage, SpatiaLite) it "
"is necessary to use indirect SQLite dialect. Otherwise additional "
"datasources are never opened but tables to be used in joins are searched "
"from the master database."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:71
msgid ""
"The column names that can be used in the result column list, in WHERE, "
"JOIN, ... clauses are the field names of the layers. Expressions, SQLite "
"functions can also be used, spatial functions, etc..."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:75
msgid ""
"The conditions on fields expressed in WHERE clauses, or in JOINs are "
"translated, as far as possible, as attribute filters that are applied on "
"the underlying OGR layers. Joins can be very expensive operations if the "
"secondary table is not indexed on the key field being used."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:81
msgid "Delimited identifiers"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:83
msgid ""
"If names of layers or attributes are reserved keywords in SQL like 'FROM'"
" or they begin with a number or underscore they must be handled as "
"\"delimited identifiers\" and enclosed between double quotation marks in "
"queries. Double quotas can be used even when they are not strictly "
"needed."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:92
msgid ""
"When SQL statements are used in the command shell and the statement "
"itself is put between double quotes, the internal double quotes must be "
"escaped with \\\\"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:100
msgid "Geometry field"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:102
msgid ""
"The ``GEOMETRY`` special field represents the geometry of the feature "
"returned by OGRFeature::GetGeometryRef(). It can be explicitly specified "
"in the result column list of a SELECT, and is automatically selected if "
"the * wildcard is used."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:107
msgid ""
"For OGR layers that have a non-empty geometry column name (generally for "
"RDBMS datasources), as returned by OGRLayer::GetGeometryColumn(), the "
"name of the geometry special field in the SQL statement will be the name "
"of the geometry column of the underlying OGR layer."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:115
#: ../../source/user/sql_sqlite_dialect.rst:127
#: ../../source/user/sql_sqlite_dialect.rst:161
#: ../../source/user/sql_sqlite_dialect.rst:254
#: ../../source/user/sql_sqlite_dialect.rst:265
msgid "returns:"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:138
msgid "OGR_STYLE special field"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:150
msgid "Spatialite SQL functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:152
msgid ""
"When GDAL/OGR is build with support for the `Spatialite <http://www.gaia-"
"gis.it/spatialite/>`_ library, a lot of `extra SQL functions <http://www"
".gaia-gis.it/gaia-sins/spatialite-sql-4.3.0.html>`_, in particular "
"spatial functions, can be used in results column fields, WHERE clauses, "
"etc...."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:178
msgid "OGR datasource SQL functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:180
msgid ""
"The ``ogr_datasource_load_layers(datasource_name[, update_mode[, "
"prefix]])`` function can be used to automatically load all the layers of "
"a datasource as :ref:`VirtualOGR tables <vector.sqlite>`."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:196
msgid "OGR layer SQL functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:198
msgid ""
"The following SQL functions are available and operate on a layer name : "
"``ogr_layer_Extent()``, ``ogr_layer_SRID()``, "
"``ogr_layer_GeometryType()`` and ``ogr_layer_FeatureCount()``"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:216
msgid "OGR compression functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:218
msgid ""
"``ogr_deflate(text_or_blob[, compression_level])`` returns a binary blob "
"compressed with the ZLib deflate algorithm. See "
":cpp:func:`CPLZLibDeflate`"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:221
msgid ""
"``ogr_inflate(compressed_blob)`` returns the decompressed binary blob, "
"from a blob compressed with the ZLib deflate algorithm. If the "
"decompressed binary is a string, use CAST(ogr_inflate(compressed_blob) AS"
" VARCHAR). See CPLZLibInflate()."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:227
msgid "Other functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:229
msgid ""
"The ``hstore_get_value()`` function can be used to extract a value "
"associate to a key from a HSTORE string, formatted like "
"\"key=>value,other_key=>other_value,...\""
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:237
msgid "OGR geocoding functions"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:239
msgid ""
"The following SQL functions are available : ``ogr_geocode(...)`` and "
"``ogr_geocode_reverse(...)``."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:241
msgid ""
"``ogr_geocode(name_to_geocode [, field_to_return [, option1 [, option2, "
"...]]])`` where name_to_geocode is a literal or a column name that must "
"be geocoded. field_to_return if specified can be \"geometry\" for the "
"geometry (default), or a field name of the layer returned by "
":cpp:func:`OGRGeocode`. The special field  \"raw\" can also be used to "
"return the raw response (XML string) of the geocoding service. option1, "
"option2, etc.. must be of the key=value format, and are options "
"understood by :cpp:func:`OGRGeocodeCreateSession` or OGRGeocode()."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:248
msgid ""
"This function internally uses the OGRGeocode() API. Refer to it for more "
"details."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:327
msgid ""
"``ogr_geocode_reverse(longitude, latitude, field_to_return [, option1 [, "
"option2, ...]])`` where longitude, latitude is the coordinate to query. "
"field_to_return must be a field name of the layer returned by "
"OGRGeocodeReverse() (for example 'display_name'). The special field  "
"\"raw\" can also be used to return the raw response (XML string) of the "
"geocoding service. option1, option2, etc.. must be of the key=value "
"format, and are options understood by OGRGeocodeCreateSession() or "
"OGRGeocodeReverse()."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:334
msgid ""
"``ogr_geocode_reverse(geometry, field_to_return [, option1 [, option2, "
"...]])`` is also accepted as an alternate syntax where geometry is a "
"(Spatialite) point geometry."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:337
msgid ""
"This function internally uses the :cpp:func:`OGRGeocodeReverse` API. "
"Refer to it for more details."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:340
msgid "Spatialite spatial index"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:342
msgid ""
"Spatialite spatial index mechanism can be triggered by making sure a "
"spatial index virtual table is mentioned in the SQL (of the form "
"idx_layername_geometrycolumn), or by using the more recent SpatialIndex "
"from the VirtualSpatialIndex extension. In which case, a in-memory RTree "
"will be built to be used to speed up the spatial queries."
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:347
msgid ""
"For example, a spatial intersection between 2 layers, by using a spatial "
"index on one of the layers to limit the number of actual geometry "
"intersection computations :"
msgstr ""

#: ../../source/user/sql_sqlite_dialect.rst:359
msgid "or more elegantly :"
msgstr ""

#: ../../source/user/vector_data_model.rst:5
msgid "Vector Data Model"
msgstr ""

#: ../../source/user/vector_data_model.rst:7
msgid ""
"This document is intended to document the OGR classes. The OGR classes "
"are intended to be generic (not specific to OLE DB or COM or Windows) but"
" are used as a foundation for implementing OLE DB Provider support, as "
"well as client side support for SFCOM. It is intended that these same OGR"
" classes could be used by an implementation of SFCORBA for instance or "
"used directly by C++ programs wanting to use an OpenGIS simple features "
"inspired API."
msgstr ""

#: ../../source/user/vector_data_model.rst:9
msgid ""
"Because OGR is modeled on the OpenGIS simple features data model, it is "
"very helpful to review the SFCOM, or other simple features interface "
"specifications which can be retrieved from the Open Geospatial Consortium"
" web site. Data types, and method names are modeled on those from the "
"interface specifications."
msgstr ""

#: ../../source/user/vector_data_model.rst:12
msgid "Class Overview"
msgstr ""

#: ../../source/user/vector_data_model.rst:14
msgid ""
"Geometry (:ref:`ogr_geometry.h <ogrgeometry_cpp>`): The geometry classes "
"(:cpp:class:`OGRGeometry`, etc) encapsulate the OpenGIS model vector data"
" as well as providing some geometry operations, and translation to/from "
"well known binary and text format. A geometry includes a spatial "
"reference system (projection)."
msgstr ""

#: ../../source/user/vector_data_model.rst:15
msgid ""
"Spatial Reference (:ref:`ogr_spatialref.h <ogrspatialref>`): An "
":cpp:class:`OGRSpatialReference` encapsulates the definition of a "
"projection and datum."
msgstr ""

#: ../../source/user/vector_data_model.rst:16
msgid ""
"Feature (:ref:`ogr_feature.h <ogrfeature_cpp>`): The "
":cpp:class:`OGRFeature` encapsulates the definition of a whole feature, "
"that is a geometry and a set of attributes."
msgstr ""

#: ../../source/user/vector_data_model.rst:17
msgid ""
"Feature Class Definition (:ref:`ogr_feature.h <ogrfeature_cpp>`): The "
":cpp:class:`OGRFeatureDefn` class captures the schema (set of field "
"definitions) for a group of related features (normally a whole layer)."
msgstr ""

#: ../../source/user/vector_data_model.rst:18
msgid ""
"Layer (:ref:`ogrsf_frmts.h <ogrlayer_cpp>`): :cpp:class:`OGRLayer` is an "
"abstract base class represent a layer of features in an GDALDataset."
msgstr ""

#: ../../source/user/vector_data_model.rst:19
msgid ""
"Dataset (:ref:`gdal_priv.h <gdaldataset_cpp>`): A "
":cpp:class:`GDALDataset` is an abstract base class representing a file or"
" database containing one or more OGRLayer objects."
msgstr ""

#: ../../source/user/vector_data_model.rst:20
msgid ""
"Drivers (gdal_priv.h): A :cpp:class:`GDALDriver` represents a translator "
"for a specific format, opening GDALDataset objects. All available drivers"
" are managed by the GDALDriverManager."
msgstr ""

#: ../../source/user/vector_data_model.rst:23
msgid "Geometry"
msgstr ""

#: ../../source/user/vector_data_model.rst:25
msgid ""
"The geometry classes are represent various kinds of vector geometry. All "
"the geometry classes derived from :cpp:class:`OGRGeometry` which defines "
"the common services of all geometries. Types of geometry include "
":cpp:class:`OGRPoint`, :cpp:class:`OGRLineString`, "
":cpp:class:`OGRPolygon`, :cpp:class:`OGRGeometryCollection`, "
":cpp:class:`OGRMultiPolygon`, :cpp:class:`OGRMultiPoint`, and "
":cpp:class:`OGRMultiLineString`."
msgstr ""

#: ../../source/user/vector_data_model.rst:27
msgid ""
"Those geometry type are extended with non-linear geometries with the "
":cpp:class:`OGRCircularString`, :cpp:class:`OGRCompoundCurve`, "
":cpp:class:`OGRCurvePolygon`, :cpp:class:`OGRMultiCurve` and "
":cpp:class:`OGRMultiSurface` classes."
msgstr ""

#: ../../source/user/vector_data_model.rst:29
msgid ""
"Additional intermediate abstract base classes contain functionality that "
"could eventually be implemented by other geometry types. These include "
"OGRCurve (base class for OGRLineString) and OGRSurface (base class for "
"OGRPolygon). Some intermediate interfaces modeled in the simple features "
"abstract model and SFCOM are not modeled in OGR at this time. In most "
"cases the methods are aggregated into other classes."
msgstr ""

#: ../../source/user/vector_data_model.rst:31
msgid ""
"The :cpp:class:`OGRGeometryFactory` is used to convert well known text, "
"and well known binary format data into geometries. These are predefined "
"ASCII and binary formats for representing all the types of simple "
"features geometries."
msgstr ""

#: ../../source/user/vector_data_model.rst:33
msgid ""
"In a manner based on the geometry object in SFCOM, the OGRGeometry "
"includes a reference to an :cpp:class:`OGRSpatialReference` object, "
"defining the spatial reference system of that geometry. This is normally "
"a reference to a shared spatial reference object with reference counting "
"for each of the OGRGeometry objects using it."
msgstr ""

#: ../../source/user/vector_data_model.rst:35
msgid ""
"Many of the spatial analysis methods (such as computing overlaps and so "
"forth) are not implemented at this time for OGRGeometry."
msgstr ""

#: ../../source/user/vector_data_model.rst:37
msgid ""
"While it is theoretically possible to derive other or more specific "
"geometry classes from the existing OGRGeometry classes, this isn't an "
"aspect that has been well thought out. In particular, it would be "
"possible to create specialized classes using the OGRGeometryFactory "
"without modifying it."
msgstr ""

#: ../../source/user/vector_data_model.rst:40
msgid "Compatibility issues with  non-linear geometries"
msgstr ""

#: ../../source/user/vector_data_model.rst:42
msgid ""
"Generic mechanisms have been introduced so that creating or modifying a "
"feature with a non-linear geometry in a layer of a driver that does not "
"support it will transform that geometry in the closest matching linear "
"geometry."
msgstr ""

#: ../../source/user/vector_data_model.rst:44
msgid ""
"On the other side, when retrieving data from the OGR C API, the "
":cpp:func:`OGRSetNonLinearGeometriesEnabledFlag` function can be used, so"
" that geometries and layer geometry type returned are also converted to "
"their linear approximation if necessary."
msgstr ""

#: ../../source/user/vector_data_model.rst:47
msgid "Spatial Reference"
msgstr ""

#: ../../source/user/vector_data_model.rst:49
msgid ""
"The :cpp:class:`OGRSpatialReference` class is intended to store an "
"OpenGIS Spatial Reference System definition. Currently local, geographic "
"and projected coordinate systems are supported. Vertical coordinate "
"systems, geocentric coordinate systems, and compound (horizontal + "
"vertical) coordinate systems are as well supported in recent GDAL "
"versions."
msgstr ""

#: ../../source/user/vector_data_model.rst:51
msgid ""
"The spatial coordinate system data model is inherited from the OpenGIS "
"Well Known Text format. A simple form of this is defined in the Simple "
"Features specifications. A more sophisticated form is found in the "
"Coordinate Transformation specification. The OGRSpatialReference is built"
" on the features of the Coordinate Transformation specification but is "
"intended to be compatible with the earlier simple features form."
msgstr ""

#: ../../source/user/vector_data_model.rst:53
msgid ""
"There is also an associated :cpp:class:`OGRCoordinateTransformation` "
"class that encapsulates use of PROJ for converting between different "
"coordinate systems. There is a tutorial available describing how to use "
"the OGRSpatialReference class."
msgstr ""

#: ../../source/user/vector_data_model.rst:56
msgid "Feature / Feature Definition"
msgstr ""

#: ../../source/user/vector_data_model.rst:58
msgid ""
"The :cpp:class:`OGRGeometry` captures the geometry of a vector feature "
"... the spatial position/region of a feature. The :cpp:class:`OGRFeature`"
" contains this geometry, and adds feature attributes, feature id, and a "
"feature class identifier. Several geometries can be associated to a "
"OGRFeature."
msgstr ""

#: ../../source/user/vector_data_model.rst:60
msgid ""
"The set of attributes, their types, names and so forth is represented via"
" the :cpp:class:`OGRFeatureDefn` class. One OGRFeatureDefn normally "
"exists for a layer of features. The same definition is shared in a "
"reference counted manner by the feature of that type (or feature class)."
msgstr ""

#: ../../source/user/vector_data_model.rst:62
msgid ""
"The feature id (FID) of a feature is intended to be a unique identifier "
"for the feature within the layer it is a member of. Freestanding "
"features, or features not yet written to a layer may have a null "
"(OGRNullFID) feature id. The feature ids are modeled in OGR as a 64-bit "
"integer; however, this is not sufficiently expressive to model the "
"natural feature ids in some formats. For instance, the GML feature id is "
"a string."
msgstr ""

#: ../../source/user/vector_data_model.rst:64
msgid ""
"The feature class also contains an indicator of the types of geometry "
"allowed for that feature class (returned as an OGRwkbGeometryType from "
":cpp:func:`OGRFeatureDefn::GetGeomType`). If this is wkbUnknown then any "
"type of geometry is allowed. This implies that features in a given layer "
"can potentially be of different geometry types though they will always "
"share a common attribute schema."
msgstr ""

#: ../../source/user/vector_data_model.rst:66
msgid ""
"Several geometry fields can be associated to a feature class. Each "
"geometry field has its own indicator of geometry type allowed, returned "
"by OGRGeomFieldDefn::GetType(), and its spatial reference system, "
"returned by :cpp:func:`OGRGeomFieldDefn::GetSpatialRef`."
msgstr ""

#: ../../source/user/vector_data_model.rst:68
msgid ""
"The OGRFeatureDefn also contains a feature class name (normally used as a"
" layer name)."
msgstr ""

#: ../../source/user/vector_data_model.rst:71
msgid "Layer"
msgstr ""

#: ../../source/user/vector_data_model.rst:73
msgid ""
"An :cpp:class:`OGRLayer` represents a layer of features within a data "
"source. All features in an OGRLayer share a common schema and are of the "
"same :cpp:class:`OGRFeatureDefn`. An OGRLayer class also contains methods"
" for reading features from the data source. The OGRLayer can be thought "
"of as a gateway for reading and writing features from an underlying data "
"source, normally a file format. In SFCOM and other table based simple "
"features implementation an OGRLayer represents a spatial table."
msgstr ""

#: ../../source/user/vector_data_model.rst:75
msgid ""
"The OGRLayer includes methods for sequential and random reading and "
"writing. Read access (via the :cpp:func:`OGRLayer::GetNextFeature` "
"method) normally reads all features, one at a time sequentially; however,"
" it can be limited to return features intersecting a particular "
"geographic region by installing a spatial filter on the OGRLayer (via the"
" :cpp:func:`OGRLayer::SetSpatialFilter` method)."
msgstr ""

#: ../../source/user/vector_data_model.rst:77
msgid ""
"One flaw in the current OGR architecture is that the spatial filter is "
"set directly on the OGRLayer which is intended to be the only "
"representative of a given layer in a data source. This means it isn't "
"possible to have multiple read operations active at one time with "
"different spatial filters on each. This aspect may be revised in the "
"future to introduce an OGRLayerView class or something similar."
msgstr ""

#: ../../source/user/vector_data_model.rst:79
msgid ""
"Another question that might arise is why the OGRLayer and OGRFeatureDefn "
"classes are distinct. An OGRLayer always has a one-to-one relationship to"
" an OGRFeatureDefn, so why not amalgamate the classes. There are two "
"reasons: - As defined now OGRFeature and OGRFeatureDefn don't depend on "
"OGRLayer, so they can exist independently in memory without regard to a "
"particular layer in a data store. - The SF CORBA model does not have a "
"concept of a layer with a single fixed schema the way that the SFCOM and "
"SFSQL models do. The fact that features belong to a feature collection "
"that is potentially not directly related to their current feature "
"grouping may be important to implementing SFCORBA support using OGR."
msgstr ""

#: ../../source/user/vector_data_model.rst:83
msgid ""
"The OGRLayer class is an abstract base class. An implementation is "
"expected to be subclassed for each file format driver implemented. "
"OGRLayers are normally owned directly by their :cpp:class:`GDALDataset`, "
"and aren't instantiated or destroyed directly."
msgstr ""

#: ../../source/user/vector_data_model.rst:88
msgid ""
"A :cpp:class:`GDALDataset` represents a set of OGRLayer objects. This "
"usually represents a single file, set of files, database or gateway. A "
"GDALDataset has a list of :cpp:class:`OGRLayer` which it owns but can "
"return references to."
msgstr ""

#: ../../source/user/vector_data_model.rst:90
msgid ""
"GDALDataset is an abstract base class. An implementation is expected to "
"be subclassed for each file format driver implemented. GDALDataset "
"objects are not normally instantiated directly but rather with the "
"assistance of an :cpp:class:`GDALDriver`. Deleting an GDALDataset closes "
"access to the underlying persistent data source, but does not normally "
"result in deletion of that file."
msgstr ""

#: ../../source/user/vector_data_model.rst:92
msgid ""
"A GDALDataset has a name (usually a filename) that can be used to reopen "
"the data source with a GDALDriver."
msgstr ""

#: ../../source/user/vector_data_model.rst:94
msgid ""
"The GDALDataset also has support for executing a datasource specific "
"command, normally a form of SQL. This is accomplished via the "
":cpp:func:`GDALDataset::ExecuteSQL` method. While some datasources (such "
"as PostGIS and Oracle) pass the SQL through to an underlying database, "
"OGR also includes support for evaluating a subset of the SQL SELECT "
"statement against any datasource."
msgstr ""

#: ../../source/user/vector_data_model.rst:97
msgid "Drivers"
msgstr ""

#: ../../source/user/vector_data_model.rst:99
msgid ""
"A :cpp:class:`GDALDriver` object is instantiated for each file format "
"supported. The GDALDriver objects are registered with the "
"GDALDriverManager, a singleton class that is normally used to open new "
"datasets."
msgstr ""

#: ../../source/user/vector_data_model.rst:101
msgid ""
"It is intended that a new GDALDriver object is instantiated and define "
"function pointers for operations like Identify(), Open() for each file "
"format to be supported (along with a file format specific GDALDataset, "
"and OGRLayer classes)."
msgstr ""

#: ../../source/user/vector_data_model.rst:103
msgid ""
"On application startup registration functions are normally called for "
"each desired file format. These functions instantiate the appropriate "
"GDALDriver objects, and register them with the GDALDriverManager. When a "
"dataset is to be opened, the driver manager will normally try each "
"GDALDataset in turn, until one succeeds, returning a GDALDataset object."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:5
msgid ""
"GDAL Virtual File Systems (compressed, network hosted, etc...): /vsimem, "
"/vsizip, /vsitar, /vsicurl, ..."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:8
msgid "Introduction"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:10
msgid ""
"GDAL can access files located on \"standard\" file systems, i.e. in the /"
" hierarchy on Unix-like systems or in C:\\, D:\\, etc... drives on "
"Windows. But most GDAL raster and vector drivers use a GDAL-specific "
"abstraction to access files. This makes it possible to access less "
"standard types of files, such as in-memory files, compressed files (.zip,"
" .gz, .tar, .tar.gz archives), encrypted files, files stored on network "
"(either publicly accessible, or in private buckets of commercial cloud "
"storage services), etc."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:12
msgid ""
"Each special file system has a prefix, and the general syntax to name a "
"file is /vsiPREFIX/..."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:14
msgid "Example:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:21
msgid "Chaining"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:23
msgid "It is possible to chain multiple file system handlers."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:35
msgid ""
"(Note is also OK to say /vsizip/vsicurl/... with a single slash. (But "
"when writing documentation please still use two.))"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:38
msgid "Drivers supporting virtual file systems"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:40
msgid ""
"Virtual file systems can only be used with GDAL or OGR drivers supporting"
" the \"large file API\", which is now the vast majority of file based "
"drivers. The full list of these formats can be obtained by looking at the"
" driver marked with 'v' when running either ``gdalinfo --formats`` or "
"``ogrinfo --formats``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:42
msgid "Notable exceptions are the netCDF, HDF4 and HDF5 drivers."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:45
msgid "/vsizip/ (.zip archives)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:47
msgid ""
"/vsizip/ is a file handler that allows reading ZIP archives on-the-fly "
"without decompressing them beforehand."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:49
msgid ""
"To point to a file inside a zip file, the filename must be of the form "
":file:`/vsizip/path/to/the/file.zip/path/inside/the/zip/file`, where "
":file:`path/to/the/file.zip` is relative or absolute and "
":file:`path/inside/the/zip/file` is the relative path to the file inside "
"the archive."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:51
msgid ""
"To use the .zip as a directory, you can use "
":file:`/vsizip/path/to/the/file.zip` or "
":file:`/vsizip/path/to/the/file.zip/subdir`. Directory listing is "
"available with :cpp:func:`VSIReadDir`. A :cpp:func:`VSIStatL` "
"(\"/vsizip/...\") call will return the uncompressed size of the file. "
"Directories inside the ZIP file can be distinguished from regular files "
"with the VSI_ISDIR(stat.st_mode) macro as for regular file systems. "
"Getting directory listing and file statistics are fast operations."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:53
msgid ""
"Note: in the particular case where the .zip file contains a single file "
"located at its root, just mentioning :file:`/vsizip/path/to/the/file.zip`"
" will work."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:63
msgid ""
".kmz, .ods and .xlsx extensions are also detected as valid extensions for"
" zip-compatible archives."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:65
msgid ""
"Starting with GDAL 2.2, an alternate syntax is available so as to enable "
"chaining and not being dependent on .zip extension, e.g.: "
":file:`/vsizip/{/path/to/the/archive}/path/inside/the/zip/file`. Note "
"that :file:`/path/to/the/archive` may also itself use this alternate "
"syntax."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:67
msgid ""
"Write capabilities are also available. They allow creating a new zip file"
" and adding new files to an already existing (or just created) zip file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:69
msgid "Creation of a new zip file:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:79
msgid "Addition of a new file to an existing zip:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:87
#: ../../source/user/virtual_file_systems.rst:112
msgid ""
"Starting with GDAL 2.4, the :decl_configoption:`GDAL_NUM_THREADS` "
"configuration option can be set to an integer or ``ALL_CPUS`` to enable "
"multi-threaded compression of a single file. This is similar to the pigz "
"utility in independent mode. By default the input stream is split into 1 "
"MB chunks (the chunk size can be tuned with the "
":decl_configoption:`CPL_VSIL_DEFLATE_CHUNK_SIZE` configuration option, "
"with values like \"x K\" or \"x M\"), and each chunk is independently "
"compressed (and terminated by a nine byte marker 0x00 0x00 0xFF 0xFF 0x00"
" 0x00 0x00 0xFF 0xFF, signaling a full flush of the stream and "
"dictionary, enabling potential independent decoding of each chunk). This "
"slightly reduces the compression rate, so very small chunk sizes should "
"be avoided."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:89
msgid ""
"Read and write operations cannot be interleaved. The new zip must be "
"closed before being re-opened in read mode."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:92
msgid "/vsigzip/ (gzipped file)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:94
msgid ""
"/vsigzip/ is a file handler that allows on-the-fly reading of GZip (.gz) "
"files without decompressing them in advance."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:96
msgid ""
"To view a gzipped file as uncompressed by GDAL, you must use the "
":file:`/vsigzip/path/to/the/file.gz` syntax, where "
":file:`path/to/the/file.gz` is relative or absolute."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:106
msgid ""
":cpp:func:`VSIStatL` will return the uncompressed file size, but this is "
"potentially a slow operation on large files, since it requires "
"uncompressing the whole file. Seeking to the end of the file, or at "
"random locations, is similarly slow. To speed up that process, "
"\"snapshots\" are internally created in memory so as to be able being "
"able to seek to part of the files already decompressed in a faster way. "
"This mechanism of snapshots also apply to /vsizip/ files."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:108
msgid ""
"When the file is located in a writable location, a file with extension "
".gz.properties is created with an indication of the uncompressed file "
"size (the creation of that file can be disabled by setting the "
":decl_configoption:`CPL_VSIL_GZIP_WRITE_PROPERTIES` configuration option "
"to ``NO``)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:110
msgid ""
"Write capabilities are also available, but read and write operations "
"cannot be interleaved."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:115
msgid "/vsitar/ (.tar, .tgz archives)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:117
msgid ""
"/vsitar/ is a file handler that allows on-the-fly reading in regular "
"uncompressed .tar or compressed .tgz or .tar.gz archives, without "
"decompressing them in advance."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:119
msgid ""
"To point to a file inside a .tar, .tgz .tar.gz file, the filename must be"
" of the form "
":file:`/vsitar/path/to/the/file.tar/path/inside/the/tar/file`, where "
":file:`path/to/the/file.tar` is relative or absolute and "
":file:`path/inside/the/tar/file` is the relative path to the file inside "
"the archive."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:121
msgid ""
"To use the .tar as a directory, you can use "
":file:`/vsizip/path/to/the/file.tar` or "
":file:`/vsitar/path/to/the/file.tar/subdir`. Directory listing is "
"available with :cpp:func:`VSIReadDir`. A :cpp:func:`VSIStatL` "
"(\"/vsitar/...\") call will return the uncompressed size of the file. "
"Directories inside the TAR file can be distinguished from regular files "
"with the VSI_ISDIR(stat.st_mode) macro as for regular file systems. "
"Getting directory listing and file statistics are fast operations."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:123
msgid ""
"Note: in the particular case where the .tar file contains a single file "
"located at its root, just mentioning :file:`/vsitar/path/to/the/file.tar`"
" will work."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:133
msgid ""
"Starting with GDAL 2.2, an alternate syntax is available so as to enable "
"chaining and not being dependent on .tar extension, e.g.: "
":file:`/vsitar/{/path/to/the/archive}/path/inside/the/tar/file`. Note "
"that :file:`/path/to/the/archive` may also itself use this alternate "
"syntax."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:136
msgid "Network based file systems"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:138
msgid ""
"A generic :ref:`/vsicurl/ </vsicurl/>` file system handler exists for "
"online resources that do not require particular signed authentication "
"schemes. It is specialized into sub-filesystems for commercial cloud "
"storage services, such as :ref:`/vsis3/ </vsis3/>`,  :ref:`/vsigs/ "
"</vsigs/>`, :ref:`/vsiaz/ </vsiaz/>`, :ref:`/vsioss/ </vsioss/>` or  "
":ref:`/vsiswift/ </vsiswift/>`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:140
msgid ""
"When reading of entire files in a streaming way is possible, prefer using"
" the :ref:`/vsicurl_streaming/ </vsicurl_streaming/>`, and its variants "
"for the above cloud storage services, for more efficiency."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:145
msgid "/vsicurl/ (http/https/ftp files: random access)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:147
msgid ""
"/vsicurl/ is a file system handler that allows on-the-fly random reading "
"of files available through HTTP/FTP web protocols, without prior download"
" of the entire file. It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:149
msgid ""
"Recognized filenames are of the form "
":file:`/vsicurl/http[s]://path/to/remote/resource` or "
":file:`/vsicurl/ftp://path/to/remote/resource`, where "
":file:`path/to/remote/resource` is the URL of a remote resource."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:151
msgid "Example using :program:`ogrinfo` to read a shapefile on the internet:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:157
msgid ""
"Starting with GDAL 2.3, options can be passed in the filename with the "
"following syntax: ``/vsicurl?[option_i=val_i&]*url=http://...`` where "
"each option name and value (including the value of \"url\") is URL-"
"encoded. Currently supported options are:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:159
msgid ""
"use_head=yes/no: whether the HTTP HEAD request can be emitted. Default to"
" YES. Setting this option overrides the behavior of the "
":decl_configoption:`CPL_VSIL_CURL_USE_HEAD` configuration option."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:160
msgid ""
"max_retry=number: default to 0. Setting this option overrides the "
"behavior of the :decl_configoption:`GDAL_HTTP_MAX_RETRY` configuration "
"option."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:161
msgid ""
"retry_delay=number_in_seconds: default to 30. Setting this option "
"overrides the behavior of the :decl_configoption:`GDAL_HTTP_RETRY_DELAY` "
"configuration option."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:162
msgid ""
"list_dir=yes/no: whether an attempt to read the file list of the "
"directory where the file is located should be done. Default to YES."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:164
msgid ""
"Partial downloads (requires the HTTP server to support random reading) "
"are done with a 16 KB granularity by default. Starting with GDAL 2.3, the"
" chunk size can be configured with the "
":decl_configoption:`CPL_VSIL_CURL_CHUNK_SIZE` configuration option, with "
"a value in bytes. If the driver detects sequential reading it will "
"progressively increase the chunk size up to 2 MB to improve download "
"performance. Starting with GDAL 2.3, the "
":decl_configoption:`GDAL_INGESTED_BYTES_AT_OPEN` configuration option can"
" be set to impose the number of bytes read in one GET call at file "
"opening (can help performance to read Cloud optimized geotiff with a "
"large header)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:166
#: ../../source/user/virtual_file_systems.rst:199
msgid ""
"The :decl_configoption:`GDAL_HTTP_PROXY`, "
":decl_configoption:`GDAL_HTTP_PROXYUSERPWD` and "
":decl_configoption:`GDAL_PROXY_AUTH` configuration options can be used to"
" define a proxy server. The syntax to use is the one of Curl "
"``CURLOPT_PROXY``, ``CURLOPT_PROXYUSERPWD`` and ``CURLOPT_PROXYAUTH`` "
"options."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:168
#: ../../source/user/virtual_file_systems.rst:201
msgid ""
"Starting with GDAL 2.1.3, the :decl_configoption:`CURL_CA_BUNDLE` or "
":decl_configoption:`SSL_CERT_FILE` configuration options can be used to "
"set the path to the Certification Authority (CA) bundle file (if not "
"specified, curl will use a file in a system location)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:170
msgid ""
"Starting with GDAL 2.3, additional HTTP headers can be sent by setting "
"the :decl_configoption:`GDAL_HTTP_HEADER_FILE` configuration option to "
"point to a filename of a text file with \"key: value\" HTTP headers.   "
":decl_configoption:`CPL_CURL_VERBOSE` set to ``YES`` allows one to see "
"them and more, when combined with ``--debug``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:172
msgid ""
"Starting with GDAL 2.3, the :decl_configoption:`GDAL_HTTP_MAX_RETRY` "
"(number of attempts) and :decl_configoption:`GDAL_HTTP_RETRY_DELAY` (in "
"seconds) configuration option can be set, so that request retries are "
"done in case of HTTP errors 429, 502, 503 or 504."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:174
msgid ""
"More generally options of :cpp:func:`CPLHTTPFetch` available through "
"configuration options are available."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:176
msgid ""
"The file can be cached in RAM by setting the configuration option "
":decl_configoption:`VSI_CACHE` to ``TRUE``. The cache size defaults to 25"
" MB, but can be modified by setting the configuration option "
":decl_configoption:`VSI_CACHE_SIZE` (in bytes). Content in that cache is "
"discarded when the file handle is closed."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:178
msgid ""
"In addition, a global least-recently-used cache of 16 MB shared among all"
" downloaded content is enabled by default, and content in it may be "
"reused after a file handle has been closed and reopen, during the life-"
"time of the process or until :cpp:func:`VSICurlClearCache` is called. "
"Starting with GDAL 2.3, the size of this global LRU cache can be modified"
" by setting the configuration option "
":decl_configoption:`CPL_VSIL_CURL_CACHE_SIZE` (in bytes)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:180
msgid ""
"Starting with GDAL 2.3, the :decl_configoption:`CPL_VSIL_CURL_NON_CACHED`"
" configuration option can be set to values like "
":file:`/vsicurl/http://example.com/foo.tif:/vsicurl/http://example.com/some_directory`,"
" so that at file handle closing, all cached content related to the "
"mentioned file(s) is no longer cached. This can help when dealing with "
"resources that can be modified during execution of GDAL related code. "
"Alternatively, :cpp:func:`VSICurlClearCache` can be used."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:182
msgid ""
"Starting with GDAL 2.1, ``/vsicurl/`` will try to query directly "
"redirected URLs to Amazon S3 signed URLs during their validity period, so"
" as to minimize round-trips. This behavior can be disabled by setting the"
" configuration option :decl_configoption:`CPL_VSIL_CURL_USE_S3_REDIRECT` "
"to ``NO``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:184
#: ../../source/user/virtual_file_systems.rst:205
msgid ""
":cpp:func:`VSIStatL` will return the size in st_size member and file "
"nature- file or directory - in st_mode member (the later only reliable "
"with FTP resources for now)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:186
msgid ""
":cpp:func:`VSIReadDir` should be able to parse the HTML directory listing"
" returned by the most popular web servers, such as Apache and Microsoft "
"IIS."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:191
msgid "/vsicurl_streaming/ (http/https/ftp files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:193
msgid ""
"/vsicurl_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files streamed through HTTP/FTP web protocols, "
"without prior download of the entire file. It requires GDAL to be built "
"against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:195
msgid ""
"Although this file handler is able seek to random offsets in the file, "
"this will not be efficient. If you need efficient random access and that "
"the server supports range downloading, you should use the :ref:`/vsicurl/"
" </vsicurl/>` file system handler instead."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:197
msgid ""
"Recognized filenames are of the form "
":file:`/vsicurl_streaming/http[s]://path/to/remote/resource` or "
":file:`/vsicurl_streaming/ftp://path/to/remote/resource`, where "
":file:`path/to/remote/resource` is the URL of a remote resource."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:203
msgid ""
"The file can be cached in RAM by setting the configuration option "
":decl_configoption:`VSI_CACHE` to ``TRUE``. The cache size defaults to 25"
" MB, but can be modified by setting the configuration option "
":decl_configoption:`VSI_CACHE_SIZE` (in bytes)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:210
msgid "/vsis3/ (AWS S3 files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:212
msgid ""
"/vsis3/ is a file system handler that allows on-the-fly random reading of"
" (primarily non-public) files available in AWS S3 buckets, without prior "
"download of the entire file. It requires GDAL to be built against "
"libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:214
msgid ""
"It also allows sequential writing of files. No seeks or read operations "
"are then allowed, so in particular direct writing of GeoTIFF files with "
"the GTiff driver is not supported, unless, if, starting with GDAL 3.2, "
"the :decl_configoption:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` "
"configuration option is set to ``YES``, in which case random-write access"
" is possible (involves the creation of a temporary local file, whose "
"location is controlled by the :decl_configoption:`CPL_TMPDIR` "
"configuration option). Deletion of files with :cpp:func:`VSIUnlink` is "
"also supported. Starting with GDAL 2.3, creation of directories with "
":cpp:func:`VSIMkdir` and deletion of (empty) directories with "
":cpp:func:`VSIRmdir` are also possible."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:218
msgid ""
"Recognized filenames are of the form :file:`/vsis3/bucket/key`, where "
"``bucket`` is the name of the S3 bucket and ``key`` is the S3 object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:220
#: ../../source/user/virtual_file_systems.rst:278
#: ../../source/user/virtual_file_systems.rst:321
#: ../../source/user/virtual_file_systems.rst:361
#: ../../source/user/virtual_file_systems.rst:394
#: ../../source/user/virtual_file_systems.rst:466
msgid "The generalities of :ref:`/vsicurl/ </vsicurl/>` apply."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:222
#: ../../source/user/virtual_file_systems.rst:280
#: ../../source/user/virtual_file_systems.rst:323
msgid ""
"Several authentication methods are possible, and are attempted in the "
"following order:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:224
msgid ""
"If :decl_configoption:`AWS_NO_SIGN_REQUEST=YES` configuration option is "
"set, request signing is disabled. This option might be used for buckets "
"with public access rights. Available since GDAL 2.3"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:225
msgid ""
"The :decl_configoption:`AWS_SECRET_ACCESS_KEY` and "
":decl_configoption:`AWS_ACCESS_KEY_ID` configuration options can be set. "
"The :decl_configoption:`AWS_SESSION_TOKEN` configuration option must be "
"set when temporary credentials are used."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:226
msgid ""
"Starting with GDAL 2.3, alternate ways of providing credentials similar "
"to what the \"aws\" command line utility or Boto3 support can be used. If"
" the above mentioned environment variables are not provided, the "
"``~/.aws/credentials`` or ``UserProfile%/.aws/credentials`` file will be "
"read (or the file pointed by "
":decl_configoption:`CPL_AWS_CREDENTIALS_FILE`). The profile may be "
"specified with the :decl_configoption:`AWS_DEFAULT_PROFILE` environment "
"variable, or starting with GDAL 3.2 with the "
":decl_configoption:`AWS_PROFILE` environment variable (the default "
"profile is \"default\")"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:227
msgid ""
"The ``~/.aws/config`` or ``UserProfile%/.aws/config`` file may also be "
"used (or the file pointer by :decl_configoption:`AWS_CONFIG_FILE`) to "
"retrieve credentials and the AWS region."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:228
msgid ""
"If none of the above method succeeds, instance profile credentials will "
"be retrieved when GDAL is used on EC2 instances."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:230
msgid ""
"The :decl_configoption:`AWS_REGION` (or "
":decl_configoption:`AWS_DEFAULT_REGION` starting with GDAL 2.3) "
"configuration option may be set to one of the supported S3 regions and "
"defaults to ``us-east-1``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:232
msgid ""
"Starting with GDAL 2.2, the :decl_configoption:`AWS_REQUEST_PAYER` "
"configuration option may be set to \"requester\" to facilitate use with "
"Requester Pays buckets."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:234
msgid ""
"The :decl_configoption:`AWS_S3_ENDPOINT` configuration option defaults to"
" s3.amazonaws.com."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:236
msgid ""
"The :decl_configoption:`AWS_HTTPS` configuration option defaults to "
"``YES``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:238
msgid ""
"The :decl_configoption:`AWS_VIRTUAL_HOSTING` configuration option "
"defaults to ``TRUE``. This allows you to configure the two ways to access"
" the buckets, see Bucket and Host Name for more details. - ``TRUE`` "
"value, identifies the bucket via a virtual bucket host name, e.g.: "
"mybucket.cname.domain.com - ``FALSE`` value, identifies the bucket as the"
" top-level directory in the URI, e.g.: cname.domain.com/mybucket"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:242
msgid ""
"On writing, the file is uploaded using the S3 multipart upload API. The "
"size of chunks is set to 50 MB by default, allowing creating files up to "
"500 GB (10000 parts of 50 MB each). If larger files are needed, then "
"increase the value of the :decl_configoption:`VSIS3_CHUNK_SIZE` config "
"option to a larger value (expressed in MB). In case the process is killed"
" and the file not properly closed, the multipart upload will remain open,"
" causing Amazon to charge you for the parts storage. You'll have to abort"
" yourself with other means such \"ghost\" uploads (e.g. with the s3cmd "
"utility) For files smaller than the chunk size, a simple PUT request is "
"used instead of the multipart upload API."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:244
msgid ""
"Since GDAL 2.4, when listing a directory, files with GLACIER storage "
"class are ignored unless the "
":decl_configoption:`CPL_VSIL_CURL_IGNORE_GLACIER_STORAGE` configuration "
"option is set to ``NO``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:246
#: ../../source/user/virtual_file_systems.rst:332
msgid ""
"Since GDAL 3.1, the :cpp:func:`VSIRename` operation is supported (first "
"doing a copy of the original file and then deleting it)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:248
msgid ""
"Since GDAL 3.1, the :cpp:func:`VSIRmdirRecursive` operation is supported "
"(using batch deletion method). The "
":decl_configoption:`CPL_VSIS3_USE_BASE_RMDIR_RECURSIVE` configuration "
"option can be set to YES if using a S3-like API that doesn't support "
"batch deletion (GDAL >= 3.2)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:256
msgid "/vsis3_streaming/ (AWS S3 files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:258
msgid ""
"/vsis3_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of (primarily non-public) files available in AWS S3 "
"buckets, without prior download of the entire file. It requires GDAL to "
"be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:260
msgid ""
"Recognized filenames are of the form :file:`/vsis3_streaming/bucket/key` "
"where ``bucket`` is the name of the S3 bucket and ``key`` is the S3 "
"object \"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:262
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsis3/ </vsis3/>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:269
msgid "/vsigs/ (Google Cloud Storage files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:271
msgid ""
"/vsigs/ is a file system handler that allows on-the-fly random reading of"
" (primarily non-public) files available in Google Cloud Storage buckets, "
"without prior download of the entire file. It requires GDAL to be built "
"against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:273
msgid ""
"Starting with GDAL 2.3, it also allows sequential writing of files. No "
"seeks or read operations are then allowed, so in particular direct "
"writing of GeoTIFF files with the GTiff driver is not supported, unless, "
"if, starting with GDAL 3.2, the "
":decl_configoption:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` "
"configuration option is set to ``YES``, in which case random-write access"
" is possible (involves the creation of a temporary local file, whose "
"location is controlled by the :decl_configoption:`CPL_TMPDIR` "
"configuration option). Deletion of files with :cpp:func:`VSIUnlink`, "
"creation of directories with :cpp:func:`VSIMkdir` and deletion of (empty)"
" directories with :cpp:func:`VSIRmdir` are also possible."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:276
msgid ""
"Recognized filenames are of the form :file:`/vsigs/bucket/key` where "
"``bucket`` is the name of the bucket and ``key`` is the object \"key\", "
"i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:282
msgid ""
"The :decl_configoption:`GS_SECRET_ACCESS_KEY` and "
":decl_configoption:`GS_ACCESS_KEY_ID` configuration options can be set "
"for AWS-style authentication"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:283
msgid ""
"The :decl_configoption:`GDAL_HTTP_HEADER_FILE` configuration option to "
"point to a filename of a text file with \"key: value\" headers. "
"Typically, it must contain a \"Authorization: Bearer XXXXXXXXX\" line."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:284
msgid ""
"(GDAL >= 2.3) The :decl_configoption:`GS_OAUTH2_REFRESH_TOKEN` "
"configuration option can be set to use OAuth2 client authentication. See "
"http://code.google.com/apis/accounts/docs/OAuth2.html This refresh token "
"can be obtained with the ``gdal_auth.py -s storage`` or ``gdal_auth.py -s"
" storage-rw`` script Note: instead of using the default GDAL application "
"credentials, you may define the :decl_configoption:`GS_OAUTH2_CLIENT_ID` "
"and :decl_configoption:`GS_OAUTH2_CLIENT_SECRET` configuration options "
"(need to be defined both for gdal_auth.py and later execution of /vsigs)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:285
msgid ""
"(GDAL >= 2.3) The :decl_configoption:`GOOGLE_APPLICATION_CREDENTIALS` "
"configuration option can be set to point to a JSON file containing OAuth2"
" service account credentials, in particular a private key and a client "
"email. See "
"https://developers.google.com/identity/protocols/OAuth2ServiceAccount for"
" more details on this authentication method. The bucket must grant the "
"\"Storage Legacy Bucket Owner\" or \"Storage Legacy Bucket Reader\" "
"permissions to the service account. The "
":decl_configoption:`GS_OAUTH2_SCOPE` configuration option can be set to "
"change the default permission scope from "
"\"https://www.googleapis.com/auth/devstorage.read_write\" to "
"\"https://www.googleapis.com/auth/devstorage.read_only\" if needed."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:286
msgid ""
"(GDAL >= 2.3) Variant of the previous method. The "
":decl_configoption:`GS_OAUTH2_PRIVATE_KEY` (or "
":decl_configoption:`GS_OAUTH2_PRIVATE_KEY_FILE)` and "
":decl_configoption:`GS_OAUTH2_CLIENT_EMAIL` can be set to use OAuth2 "
"service account authentication. See "
"https://developers.google.com/identity/protocols/OAuth2ServiceAccount for"
" more details on this authentication method. The "
":decl_configoption:`GS_OAUTH2_PRIVATE_KEY` configuration option must "
"contain the private key as a inline string, starting with ``-----BEGIN "
"PRIVATE KEY-----``. Alternatively the "
":decl_configoption:`GS_OAUTH2_PRIVATE_KEY_FILE` configuration option can "
"be set to indicate a filename that contains such a private key. The "
"bucket must grant the \"Storage Legacy Bucket Owner\" or \"Storage Legacy"
" Bucket Reader\" permissions to the service account. The "
":decl_configoption:`GS_OAUTH2_SCOPE` configuration option can be set to "
"change the default permission scope from "
"\"https://www.googleapis.com/auth/devstorage.read_write\" to "
"\"https://www.googleapis.com/auth/devstorage.read_only\" if needed."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:287
msgid ""
"(GDAL >= 2.3) An alternate way of providing credentials similar to what "
"the \"gsutil\" command line utility or Boto3 support can be used. If the "
"above mentioned environment variables are not provided, the "
":file:`~/.boto` or :file:`UserProfile%/.boto` file will be read (or the "
"file pointed by :decl_configoption:`CPL_GS_CREDENTIALS_FILE`) for the "
"gs_secret_access_key and gs_access_key_id entries for AWS style "
"authentication. If not found, it will look for the "
"gs_oauth2_refresh_token (and optionally client_id and client_secret) "
"entry for OAuth2 client authentication."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:288
msgid ""
"(GDAL >= 2.3) Finally if none of the above method succeeds, the code will"
" check if the current machine is a Google Compute Engine instance, and if"
" so will use the permissions associated to it (using the default service "
"account associated with the VM). To force a machine to be detected as a "
"GCE instance (for example for code running in a container with no access "
"to the boot logs), you can set :decl_configoption:`CPL_MACHINE_IS_GCE` to"
" ``YES``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:290
msgid ""
"Since GDAL 3.1, the Rename() operation is supported (first doing a copy "
"of the original file and then deleting it)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:297
msgid "/vsigs_streaming/ (Google Cloud Storage files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:299
msgid ""
"/vsigs_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"Google Cloud Storage buckets, without prior download of the entire file. "
"It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:301
msgid ""
"Recognized filenames are of the form :file:`/vsigs_streaming/bucket/key` "
"where ``bucket`` is the name of the bucket and ``key`` is the object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:303
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsigs/ </vsigs/>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:310
msgid "/vsiaz/ (Microsoft Azure Blob files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:312
msgid ""
"/vsiaz/ is a file system handler that allows on-the-fly random reading of"
" (primarily non-public) files available in Microsoft Azure Blob "
"containers, without prior download of the entire file. It requires GDAL "
"to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:314
msgid ""
"It also allows sequential writing of files. No seeks or read operations "
"are then allowed, so in particular direct writing of GeoTIFF files with "
"the GTiff driver is not supported, unless, if, starting with GDAL 3.2, "
"the :decl_configoption:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` "
"configuration option is set to ``YES``, in which case random-write access"
" is possible (involves the creation of a temporary local file, whose "
"location is controlled by the :decl_configoption:`CPL_TMPDIR` "
"configuration option). A block blob will be created if the file size is "
"below 4 MB. Beyond, an append blob will be created (with a maximum file "
"size of 195 GB)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:317
msgid ""
"Deletion of files with :cpp:func:`VSIUnlink`, creation of directories "
"with :cpp:func:`VSIMkdir` and deletion of (empty) directories with "
":cpp:func:`VSIRmdir` are also possible. Note: when using "
":cpp:func:`VSIMkdir`, a special hidden :file:`.gdal_marker_for_dir` empty"
" file is created, since Azure Blob does not natively support empty "
"directories. If that file is the last one remaining in a directory, "
":cpp:func:`VSIRmdir` will automatically remove it. This file will not be "
"seen with :cpp:func:`VSIReadDir`. If removing files from directories not "
"created with :cpp:func:`VSIMkdir`, when the last file is deleted, its "
"directory is automatically removed by Azure, so the sequence "
"``VSIUnlink(\"/vsiaz/container/subdir/lastfile\")`` followed by "
"``VSIRmdir(\"/vsiaz/container/subdir\")`` will fail on the "
":cpp:func:`VSIRmdir` invocation."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:319
msgid ""
"Recognized filenames are of the form :file:`/vsiaz/container/key`, where "
"``container`` is the name of the container and ``key`` is the object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:325
msgid ""
"The :decl_configoption:`AZURE_STORAGE_CONNECTION_STRING` configuration "
"option, given in the access key section of the administration interface. "
"It contains both the account name and a secret key."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:326
msgid ""
"The :decl_configoption:`AZURE_STORAGE_ACCOUNT` configuration option is "
"set to specify the account name AND"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:328
msgid ""
"The :decl_configoption:`AZURE_STORAGE_ACCESS_KEY` configuration option is"
" set to specify the secret key."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:329
msgid ""
"The :decl_configoption:`AZURE_NO_SIGN_REQUEST=YES` configuration option "
"is set, so as to disable any request signing. This option might be used "
"for accounts with public access rights. Available since GDAL 3.2"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:330
msgid ""
"The :decl_configoption:`AZURE_SAS` configuration option is set to specify"
" a Shared Access Signature. This SAS is appended to URLs built by the "
"/vsiaz/ file system handler. Its value should already be URL-encoded and "
"should not contain any leading '?' or '&' character (e.g. a valid one may"
" look like "
"\"st=2019-07-18T03%3A53%3A22Z&se=2035-07-19T03%3A53%3A00Z&sp=rl&sv=2018-03-28&sr=c&sig=2RIXmLbLbiagYnUd49rgx2kOXKyILrJOgafmkODhRAQ%3D\")."
" Available since GDAL 3.2"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:339
msgid "/vsiaz_streaming/ (Microsoft Azure Blob files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:341
msgid ""
"/vsiaz_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"Microsoft Azure Blob containers, buckets, without prior download of the "
"entire file. It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:343
msgid ""
"Recognized filenames are of the form "
":file:`/vsiaz_streaming/container/key` where ``container`` is the name of"
" the container and ``key`` is the object \"key\", i.e. a filename "
"potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:345
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsiaz/ </vsiaz/>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:352
msgid "/vsioss/ (Alibaba Cloud OSS files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:354
msgid ""
"/vsioss/ is a file system handler that allows on-the-fly random reading "
"of (primarily non-public) files available in Alibaba Cloud Object Storage"
" Service (OSS) buckets, without prior download of the entire file. It "
"requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:356
#: ../../source/user/virtual_file_systems.rst:389
#: ../../source/user/virtual_file_systems.rst:463
msgid ""
"It also allows sequential writing of files. No seeks or read operations "
"are then allowed, so in particular direct writing of GeoTIFF files with "
"the GTiff driver is not supported, unless, if, starting with GDAL 3.2, "
"the :decl_configoption:`CPL_VSIL_USE_TEMP_FILE_FOR_RANDOM_WRITE` "
"configuration option is set to ``YES``, in which case random-write access"
" is possible (involves the creation of a temporary local file, whose "
"location is controlled by the :decl_configoption:`CPL_TMPDIR` "
"configuration option). Deletion of files with :cpp:func:`VSIUnlink` is "
"also supported. Creation of directories with :cpp:func:`VSIMkdir` and "
"deletion of (empty) directories with :cpp:func:`VSIRmdir` are also "
"possible."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:359
msgid ""
"Recognized filenames are of the form :file:`/vsioss/bucket/key` where "
"``bucket`` is the name of the OSS bucket and ``key`` is the OSS object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:363
msgid ""
"The :decl_configoption:`OSS_SECRET_ACCESS_KEY` and "
":decl_configoption:`OSS_ACCESS_KEY_ID` configuration options must be set."
" The :decl_configoption:`OSS_ENDPOINT` configuration option should "
"normally be set to the appropriate value, which reflects the region "
"attached to the bucket. The default is ``oss-us-east-1.aliyuncs.com``. If"
" the bucket is stored in another region than oss-us-east-1, the code "
"logic will redirect to the appropriate endpoint."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:365
msgid ""
"On writing, the file is uploaded using the OSS multipart upload API. The "
"size of chunks is set to 50 MB by default, allowing creating files up to "
"500 GB (10000 parts of 50 MB each). If larger files are needed, then "
"increase the value of the :decl_configoption:`VSIOSS_CHUNK_SIZE` config "
"option to a larger value (expressed in MB). In case the process is killed"
" and the file not properly closed, the multipart upload will remain open,"
" causing Alibaba to charge you for the parts storage. You'll have to "
"abort yourself with other means. For files smaller than the chunk size, a"
" simple PUT request is used instead of the multipart upload API."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:372
msgid "/vsioss_streaming/ (Alibaba Cloud OSS files: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:374
msgid ""
"/vsioss_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"Alibaba Cloud Object Storage Service (OSS) buckets, without prior "
"download of the entire file. It requires GDAL to be built against "
"libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:376
msgid ""
"Recognized filenames are of the form :file:`/vsioss_streaming/bucket/key`"
" where ``bucket`` is the name of the bucket and ``key`` is the object "
"\"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:378
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsioss/ </vsioss/>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:385
msgid "/vsiswift/ (OpenStack Swift Object Storage)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:387
msgid ""
"/vsiswift/ is a file system handler that allows on-the-fly random reading"
" of (primarily non-public) files available in OpenStack Swift Object "
"Storage (swift) buckets, without prior download of the entire file. It "
"requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:392
msgid ""
"Recognized filenames are of the form :file:`/vsiswift/bucket/key` where "
"``bucket`` is the name of the swift bucket and ``key`` is the swift "
"object \"key\", i.e. a filename potentially containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:396
msgid ""
"Three authentication methods are possible, and are attempted in the "
"following order:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:398
msgid ""
"The :decl_configoption:`SWIFT_STORAGE_URL` and "
":decl_configoption:`SWIFT_AUTH_TOKEN` configuration options are set "
"respectively to the storage URL (e.g "
"http://127.0.0.1:12345/v1/AUTH_something) and the value of the x-auth-"
"token authorization token."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:399
msgid ""
"The :decl_configoption:`SWIFT_AUTH_V1_URL`, "
":decl_configoption:`SWIFT_USER` and :decl_configoption:`SWIFT_KEY` "
"configuration options are set respectively to the endpoint of the Auth V1"
" authentication (e.g http://127.0.0.1:12345/auth/v1.0), the user name and"
" the key/password. This authentication endpoint will be used to retrieve "
"the storage URL and authorization token mentioned in the first "
"authentication method."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:400
msgid ""
"Authentication with Keystone v3 is using the same options as python-"
"swiftclient, see https://docs.openstack.org/python-"
"swiftclient/latest/cli/index.html#authentication for more details. GDAL "
"(>= 3.1) supports the following options:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:402
msgid "`OS_IDENTITY_API_VERSION=3`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:403
msgid "`OS_AUTH_URL`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:404
msgid "`OS_USERNAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:405
msgid "`OS_PASSWORD`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:406
msgid "`OS_USER_DOMAIN_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:407
msgid "`OS_PROJECT_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:408
msgid "`OS_PROJECT_DOMAIN_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:409
msgid "`OS_REGION_NAME`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:411
msgid ""
"This file system handler also allows sequential writing of files (no "
"seeks or read operations are then allowed)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:413
msgid ""
"In some versions of OpenStack Swift, the access to large (segmented) "
"files fails unless they are explicitly marked as static large objects, "
"instead of being dynamic large objects which is the default. Using the "
"python-swiftclient this can be achieved when uploading the file by "
"passing the ``--use-slo`` flag (see https://docs.openstack.org/python-"
"swiftclient/latest/cli/index.html#swift-upload for all options). For more"
" information about large objects see "
"https://docs.openstack.org/swift/latest/api/large_objects.html."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:420
msgid "/vsiswift_streaming/ (OpenStack Swift Object Storage: streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:422
msgid ""
"/vsiswift_streaming/ is a file system handler that allows on-the-fly "
"sequential reading of files (primarily non-public) files available in "
"OpenStack Swift Object Storage (swift) buckets, without prior download of"
" the entire file. It requires GDAL to be built against libcurl."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:424
msgid ""
"Recognized filenames are of the form "
":file:`/vsiswift_streaming/bucket/key` where ``bucket`` is the name of "
"the bucket and ``key`` is the object \"key\", i.e. a filename potentially"
" containing subdirectories."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:426
msgid ""
"Authentication options, and read-only features, are identical to "
":ref:`/vsiswift/ </vsiswift/>`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:433
msgid "/vsihdfs/ (Hadoop File System)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:435
msgid ""
"/vsihdfs/ is a file system handler that provides read access to HDFS. "
"This handler requires GDAL to have been built with Java support "
"(``--with-java``) and HDFS support (``--with-hdfs``). Support for this "
"handler is currently only available on Unix-like systems. Note: support "
"for the HTTP REST API (webHdfs) is also available with "
":ref:`/vsiwebhdfs/`"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:437
msgid ""
"Recognized filenames are of the form :file:`/vsihdfs/hdfsUri` where "
"``hdfsUri`` is a valid HDFS URI."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:451
msgid "/vsiwebhdfs/ (Web Hadoop File System REST API)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:453
msgid ""
"/vsiwebhdfs/ is a file system handler that provides read and write access"
" to HDFS through its HTTP REST API."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:455
msgid ""
"Recognized filenames are of the form "
":file:`/vsiwebhdfs/http://hostname:port/webhdfs/v1/path/to/filename`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:468
msgid "The following configuration options are available:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:470
msgid ""
":decl_configoption:`WEBHDFS_USERNAME` = value: User name (when security "
"is off)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:471
msgid ""
":decl_configoption:`WEBHDFS_DELEGATION` = value: Hadoop delegation token "
"(when security is on)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:472
msgid ""
":decl_configoption:`WEBHDFS_DATANODE_HOST` = value: For APIs using "
"redirect, substitute the redirection hostname with the one provided by "
"this option (normally resolvable hostname should be rewritten by a proxy)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:473
msgid ""
":decl_configoption:`WEBHDFS_REPLICATION` = int_value: Replication value "
"used when creating a file"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:474
msgid ""
":decl_configoption:`WEBHDFS_PERMISSION` = int_value: Permission mask (to "
"provide as decimal number) when creating a file or directory"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:476
msgid ""
"This file system handler also allows sequential writing of files (no "
"seeks or read operations are then allowed)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:483
msgid "/vsistdin/ (standard input streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:485
msgid ""
"/vsistdin/ is a file handler that allows reading from the standard input "
"stream."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:487
msgid "The filename syntax must be only :file:`/vsistdin/`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:489
msgid ""
"The file operations available are of course limited to Read() and forward"
" Seek(). Full seek in the first MB of a file is possible, and it is "
"cached so that closing, re-opening :file:`/vsistdin/` and reading within "
"this first megabyte is possible multiple times in the same process."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:494
msgid "/vsistdout/ (standard output streaming)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:496
msgid ""
"/vsistdout/ is a file handler that allows writing into the standard "
"output stream."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:498
msgid "The filename syntax must be only :file:`/vsistdout/`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:500
msgid "The file operations available are of course limited to Write()."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:502
msgid ""
"A variation of this file system exists as the "
":file:`/vsistdout_redirect/` file system handler, where the output "
"function can be defined with :cpp:func:`VSIStdoutSetRedirection`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:507
msgid "/vsimem/ (in-memory files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:509
msgid ""
"/vsimem/ is a file handler that allows block of memory to be treated as "
"files. All portions of the file system underneath the base path "
":file:`/vsimem/` will be handled by this driver."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:511
msgid ""
"Normal VSI*L functions can be used freely to create and destroy memory "
"arrays, treating them as if they were real file system objects. Some "
"additional methods exist to efficiently create memory file system objects"
" without duplicating original copies of the data or to \"steal\" the "
"block of memory associated with a memory file. See "
":cpp:func:`VSIFileFromMemBuffer` and :cpp:func:`VSIGetMemFileBuffer`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:513
msgid "Directory related functions are supported."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:515
msgid ""
"/vsimem/ files are visible within the same process. Multiple threads can "
"access the same underlying file in read mode, provided they used "
"different handles, but concurrent write and read operations on the same "
"underlying file are not supported (locking is left to the responsibility "
"of calling code)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:520
msgid "/vsisubfile/ (portions of files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:522
msgid ""
"The /vsisubfile/ virtual file system handler allows access to subregions "
"of files, treating them as a file on their own to the virtual file system"
" functions (VSIFOpenL(), etc)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:524
msgid ""
"A special form of the filename is used to indicate a subportion of "
"another file: :file:`/vsisubfile/<offset>[_<size>],<filename>`."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:526
msgid ""
"The size parameter is optional. Without it the remainder of the file from"
" the start offset as treated as part of the subfile. Otherwise only "
"<size> bytes from <offset> are treated as part of the subfile. The "
"<filename> portion may be a relative or absolute path using normal rules."
" The <offset> and <size> values are in bytes."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:536
msgid ""
"Unlike the /vsimem/ or conventional file system handlers, there is no "
"meaningful support for filesystem operations for creating new files, "
"traversing directories, and deleting files within the /vsisubfile/ area. "
"Only the :cpp:func:`VSIStatL`, :cpp:func:`VSIFOpenL` and operations based"
" on the file handle returned by :cpp:func:`VSIFOpenL` operate properly."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:541
msgid "/vsisparse/ (sparse files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:543
msgid ""
"The /vsisparse/ virtual file handler allows a virtual file to be composed"
" from chunks of data in other files, potentially with large spaces in the"
" virtual file set to a constant value. This can make it possible to test "
"some sorts of operations on what seems to be a large file with image data"
" set to a constant value. It is also helpful when wanting to add test "
"files to the test suite that are too large, but for which most of the "
"data can be ignored. It could, in theory, also be used to treat several "
"files on different file systems as one large virtual file."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:545
msgid ""
"The file referenced by /vsisparse/ should be an XML control file "
"formatted something like:"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:579
msgid "Hopefully the values and semantics are fairly obvious."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:582
msgid "File caching"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:584
msgid ""
"This is not a proper virtual file system handler, but a C function that "
"takes a virtual file handle and returns a new handle that caches read-"
"operations on the input file handle. The cache is RAM based and the "
"content of the cache is discarded when the file handle is closed. The "
"cache is a least-recently used lists of blocks of 32KB each."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:586
msgid ""
"The :cpp:class:`VSICachedFile` class only handles read operations at that"
" time, and will error out on write operations."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:588
msgid ""
"This is done with the :cpp:func:`VSICreateCachedFile` function, that is "
"implicitly used by a number of the above mentioned file systems (namely "
"the default one for standard file system operations, and the /vsicurl/ "
"and other related network file systems) if the ``VSI_CACHE`` "
"configuration option is set to ``YES``."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:590
msgid ""
"The default size of caching for each file is 25 MB (25 MB for each file "
"that is cached), and can be controlled with the ``VSI_CACHE_SIZE`` "
"configuration option (value in bytes)."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:593
msgid "/vsicrypt/ (encrypted files)"
msgstr ""

#: ../../source/user/virtual_file_systems.rst:595
msgid ""
"/vsicrypt/ is a special file handler is installed that allows "
"reading/creating/update encrypted files on the fly, with random access "
"capabilities."
msgstr ""

#: ../../source/user/virtual_file_systems.rst:597
msgid "Refer to :cpp:func:`VSIInstallCryptFileHandler` for more details."
msgstr ""

